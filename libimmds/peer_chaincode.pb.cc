// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer/chaincode.proto

#include "peer/chaincode.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_peer_2fchaincode_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeID_peer_2fchaincode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2fchaincode_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeInput_peer_2fchaincode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2fchaincode_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeInput_DecorationsEntry_DoNotUse_peer_2fchaincode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2fchaincode_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ChaincodeSpec_peer_2fchaincode_2eproto;
namespace protos {
class ChaincodeIDDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeID> _instance;
} _ChaincodeID_default_instance_;
class ChaincodeInput_DecorationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeInput_DecorationsEntry_DoNotUse> _instance;
} _ChaincodeInput_DecorationsEntry_DoNotUse_default_instance_;
class ChaincodeInputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeInput> _instance;
} _ChaincodeInput_default_instance_;
class ChaincodeSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeSpec> _instance;
} _ChaincodeSpec_default_instance_;
class ChaincodeDeploymentSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeDeploymentSpec> _instance;
} _ChaincodeDeploymentSpec_default_instance_;
class ChaincodeInvocationSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeInvocationSpec> _instance;
} _ChaincodeInvocationSpec_default_instance_;
class LifecycleEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LifecycleEvent> _instance;
} _LifecycleEvent_default_instance_;
}  // namespace protos
static void InitDefaultsscc_info_ChaincodeDeploymentSpec_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeDeploymentSpec_default_instance_;
    new (ptr) ::protos::ChaincodeDeploymentSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeDeploymentSpec_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeDeploymentSpec_peer_2fchaincode_2eproto}, {
      &scc_info_ChaincodeSpec_peer_2fchaincode_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeID_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeID_default_instance_;
    new (ptr) ::protos::ChaincodeID();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeID_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChaincodeID_peer_2fchaincode_2eproto}, {}};

static void InitDefaultsscc_info_ChaincodeInput_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeInput_default_instance_;
    new (ptr) ::protos::ChaincodeInput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeInput_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeInput_peer_2fchaincode_2eproto}, {
      &scc_info_ChaincodeInput_DecorationsEntry_DoNotUse_peer_2fchaincode_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeInput_DecorationsEntry_DoNotUse_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeInput_DecorationsEntry_DoNotUse_default_instance_;
    new (ptr) ::protos::ChaincodeInput_DecorationsEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeInput_DecorationsEntry_DoNotUse_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChaincodeInput_DecorationsEntry_DoNotUse_peer_2fchaincode_2eproto}, {}};

static void InitDefaultsscc_info_ChaincodeInvocationSpec_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeInvocationSpec_default_instance_;
    new (ptr) ::protos::ChaincodeInvocationSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeInvocationSpec_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeInvocationSpec_peer_2fchaincode_2eproto}, {
      &scc_info_ChaincodeSpec_peer_2fchaincode_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeSpec_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeSpec_default_instance_;
    new (ptr) ::protos::ChaincodeSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ChaincodeSpec_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ChaincodeSpec_peer_2fchaincode_2eproto}, {
      &scc_info_ChaincodeID_peer_2fchaincode_2eproto.base,
      &scc_info_ChaincodeInput_peer_2fchaincode_2eproto.base,}};

static void InitDefaultsscc_info_LifecycleEvent_peer_2fchaincode_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_LifecycleEvent_default_instance_;
    new (ptr) ::protos::LifecycleEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LifecycleEvent_peer_2fchaincode_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LifecycleEvent_peer_2fchaincode_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_peer_2fchaincode_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_peer_2fchaincode_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_peer_2fchaincode_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_peer_2fchaincode_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeID, path_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeID, name_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeID, version_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput_DecorationsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput_DecorationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput_DecorationsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput_DecorationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput, args_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInput, decorations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeSpec, type_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeSpec, chaincode_id_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeSpec, input_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeSpec, timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeDeploymentSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeDeploymentSpec, chaincode_spec_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeDeploymentSpec, code_package_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeDeploymentSpec, exec_env_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInvocationSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeInvocationSpec, chaincode_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::LifecycleEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::LifecycleEvent, chaincode_name_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::ChaincodeID)},
  { 8, 15, sizeof(::protos::ChaincodeInput_DecorationsEntry_DoNotUse)},
  { 17, -1, sizeof(::protos::ChaincodeInput)},
  { 24, -1, sizeof(::protos::ChaincodeSpec)},
  { 33, -1, sizeof(::protos::ChaincodeDeploymentSpec)},
  { 41, -1, sizeof(::protos::ChaincodeInvocationSpec)},
  { 47, -1, sizeof(::protos::LifecycleEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeInput_DecorationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeInput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeDeploymentSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeInvocationSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_LifecycleEvent_default_instance_),
};

const char descriptor_table_protodef_peer_2fchaincode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024peer/chaincode.proto\022\006protos\":\n\013Chainc"
  "odeID\022\014\n\004path\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017\n\007ver"
  "sion\030\003 \001(\t\"\220\001\n\016ChaincodeInput\022\014\n\004args\030\001 "
  "\003(\014\022<\n\013decorations\030\002 \003(\0132\'.protos.Chainc"
  "odeInput.DecorationsEntry\0322\n\020Decorations"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\334\001"
  "\n\rChaincodeSpec\022(\n\004type\030\001 \001(\0162\032.protos.C"
  "haincodeSpec.Type\022)\n\014chaincode_id\030\002 \001(\0132"
  "\023.protos.ChaincodeID\022%\n\005input\030\003 \001(\0132\026.pr"
  "otos.ChaincodeInput\022\017\n\007timeout\030\004 \001(\005\">\n\004"
  "Type\022\r\n\tUNDEFINED\020\000\022\n\n\006GOLANG\020\001\022\010\n\004NODE\020"
  "\002\022\007\n\003CAR\020\003\022\010\n\004JAVA\020\004\"\354\001\n\027ChaincodeDeploy"
  "mentSpec\022-\n\016chaincode_spec\030\001 \001(\0132\025.proto"
  "s.ChaincodeSpec\022\024\n\014code_package\030\003 \001(\014\022F\n"
  "\010exec_env\030\004 \001(\01624.protos.ChaincodeDeploy"
  "mentSpec.ExecutionEnvironment\".\n\024Executi"
  "onEnvironment\022\n\n\006DOCKER\020\000\022\n\n\006SYSTEM\020\001J\004\010"
  "\002\020\003R\016effective_date\"a\n\027ChaincodeInvocati"
  "onSpec\022-\n\016chaincode_spec\030\001 \001(\0132\025.protos."
  "ChaincodeSpecJ\004\010\002\020\003R\021id_generation_alg\"("
  "\n\016LifecycleEvent\022\026\n\016chaincode_name\030\001 \001(\t"
  "*4\n\024ConfidentialityLevel\022\n\n\006PUBLIC\020\000\022\020\n\014"
  "CONFIDENTIAL\020\001BO\n\"org.hyperledger.fabric"
  ".protos.peerZ)github.com/hyperledger/fab"
  "ric/protos/peerb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_peer_2fchaincode_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_peer_2fchaincode_2eproto_sccs[7] = {
  &scc_info_ChaincodeDeploymentSpec_peer_2fchaincode_2eproto.base,
  &scc_info_ChaincodeID_peer_2fchaincode_2eproto.base,
  &scc_info_ChaincodeInput_peer_2fchaincode_2eproto.base,
  &scc_info_ChaincodeInput_DecorationsEntry_DoNotUse_peer_2fchaincode_2eproto.base,
  &scc_info_ChaincodeInvocationSpec_peer_2fchaincode_2eproto.base,
  &scc_info_ChaincodeSpec_peer_2fchaincode_2eproto.base,
  &scc_info_LifecycleEvent_peer_2fchaincode_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_peer_2fchaincode_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_peer_2fchaincode_2eproto = {
  false, false, descriptor_table_protodef_peer_2fchaincode_2eproto, "peer/chaincode.proto", 983,
  &descriptor_table_peer_2fchaincode_2eproto_once, descriptor_table_peer_2fchaincode_2eproto_sccs, descriptor_table_peer_2fchaincode_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_peer_2fchaincode_2eproto::offsets,
  file_level_metadata_peer_2fchaincode_2eproto, 7, file_level_enum_descriptors_peer_2fchaincode_2eproto, file_level_service_descriptors_peer_2fchaincode_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_peer_2fchaincode_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_peer_2fchaincode_2eproto)), true);
namespace protos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChaincodeSpec_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_peer_2fchaincode_2eproto);
  return file_level_enum_descriptors_peer_2fchaincode_2eproto[0];
}
bool ChaincodeSpec_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ChaincodeSpec_Type ChaincodeSpec::UNDEFINED;
constexpr ChaincodeSpec_Type ChaincodeSpec::GOLANG;
constexpr ChaincodeSpec_Type ChaincodeSpec::NODE;
constexpr ChaincodeSpec_Type ChaincodeSpec::CAR;
constexpr ChaincodeSpec_Type ChaincodeSpec::JAVA;
constexpr ChaincodeSpec_Type ChaincodeSpec::Type_MIN;
constexpr ChaincodeSpec_Type ChaincodeSpec::Type_MAX;
constexpr int ChaincodeSpec::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChaincodeDeploymentSpec_ExecutionEnvironment_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_peer_2fchaincode_2eproto);
  return file_level_enum_descriptors_peer_2fchaincode_2eproto[1];
}
bool ChaincodeDeploymentSpec_ExecutionEnvironment_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec::DOCKER;
constexpr ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec::SYSTEM;
constexpr ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec::ExecutionEnvironment_MIN;
constexpr ChaincodeDeploymentSpec_ExecutionEnvironment ChaincodeDeploymentSpec::ExecutionEnvironment_MAX;
constexpr int ChaincodeDeploymentSpec::ExecutionEnvironment_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfidentialityLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_peer_2fchaincode_2eproto);
  return file_level_enum_descriptors_peer_2fchaincode_2eproto[2];
}
bool ConfidentialityLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class ChaincodeID::_Internal {
 public:
};

ChaincodeID::ChaincodeID(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeID)
}
ChaincodeID::ChaincodeID(const ChaincodeID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeID)
}

void ChaincodeID::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeID_peer_2fchaincode_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChaincodeID::~ChaincodeID() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeID)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeID::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChaincodeID::ArenaDtor(void* object) {
  ChaincodeID* _this = reinterpret_cast< ChaincodeID* >(object);
  (void)_this;
}
void ChaincodeID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeID& ChaincodeID::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeID_peer_2fchaincode_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeID::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protos.ChaincodeID.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protos.ChaincodeID.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protos.ChaincodeID.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeID::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeID)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protos.ChaincodeID.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protos.ChaincodeID.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protos.ChaincodeID.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeID)
  return target;
}

size_t ChaincodeID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeID)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeID::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeID)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeID* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeID>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeID)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeID)
    MergeFrom(*source);
  }
}

void ChaincodeID::MergeFrom(const ChaincodeID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ChaincodeID::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeID::CopyFrom(const ChaincodeID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeID::IsInitialized() const {
  return true;
}

void ChaincodeID::InternalSwap(ChaincodeID* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeID::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ChaincodeInput_DecorationsEntry_DoNotUse::ChaincodeInput_DecorationsEntry_DoNotUse() {}
ChaincodeInput_DecorationsEntry_DoNotUse::ChaincodeInput_DecorationsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ChaincodeInput_DecorationsEntry_DoNotUse::MergeFrom(const ChaincodeInput_DecorationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeInput_DecorationsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ChaincodeInput_DecorationsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class ChaincodeInput::_Internal {
 public:
};

ChaincodeInput::ChaincodeInput(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  args_(arena),
  decorations_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeInput)
}
ChaincodeInput::ChaincodeInput(const ChaincodeInput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  decorations_.MergeFrom(from.decorations_);
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeInput)
}

void ChaincodeInput::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeInput_peer_2fchaincode_2eproto.base);
}

ChaincodeInput::~ChaincodeInput() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeInput)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeInput::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ChaincodeInput::ArenaDtor(void* object) {
  ChaincodeInput* _this = reinterpret_cast< ChaincodeInput* >(object);
  (void)_this;
}
void ChaincodeInput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeInput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeInput& ChaincodeInput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeInput_peer_2fchaincode_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeInput::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  decorations_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeInput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated bytes args = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_args();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, bytes> decorations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&decorations_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeInput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeInput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes args = 1;
  for (int i = 0, n = this->_internal_args_size(); i < n; i++) {
    const auto& s = this->_internal_args(i);
    target = stream->WriteBytes(1, s, target);
  }

  // map<string, bytes> decorations = 2;
  if (!this->_internal_decorations().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "protos.ChaincodeInput.DecorationsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_decorations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_decorations().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_decorations().begin();
          it != this->_internal_decorations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ChaincodeInput_DecorationsEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_decorations().begin();
          it != this->_internal_decorations().end(); ++it) {
        target = ChaincodeInput_DecorationsEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeInput)
  return target;
}

size_t ChaincodeInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeInput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes args = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(args_.size());
  for (int i = 0, n = args_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      args_.Get(i));
  }

  // map<string, bytes> decorations = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_decorations_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_decorations().begin();
      it != this->_internal_decorations().end(); ++it) {
    total_size += ChaincodeInput_DecorationsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeInput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeInput)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeInput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeInput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeInput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeInput)
    MergeFrom(*source);
  }
}

void ChaincodeInput::MergeFrom(const ChaincodeInput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeInput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  decorations_.MergeFrom(from.decorations_);
}

void ChaincodeInput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeInput::CopyFrom(const ChaincodeInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeInput::IsInitialized() const {
  return true;
}

void ChaincodeInput::InternalSwap(ChaincodeInput* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  decorations_.Swap(&other->decorations_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeInput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ChaincodeSpec::_Internal {
 public:
  static const ::protos::ChaincodeID& chaincode_id(const ChaincodeSpec* msg);
  static const ::protos::ChaincodeInput& input(const ChaincodeSpec* msg);
};

const ::protos::ChaincodeID&
ChaincodeSpec::_Internal::chaincode_id(const ChaincodeSpec* msg) {
  return *msg->chaincode_id_;
}
const ::protos::ChaincodeInput&
ChaincodeSpec::_Internal::input(const ChaincodeSpec* msg) {
  return *msg->input_;
}
ChaincodeSpec::ChaincodeSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeSpec)
}
ChaincodeSpec::ChaincodeSpec(const ChaincodeSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chaincode_id()) {
    chaincode_id_ = new ::protos::ChaincodeID(*from.chaincode_id_);
  } else {
    chaincode_id_ = nullptr;
  }
  if (from._internal_has_input()) {
    input_ = new ::protos::ChaincodeInput(*from.input_);
  } else {
    input_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
    reinterpret_cast<char*>(&type_)) + sizeof(timeout_));
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeSpec)
}

void ChaincodeSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeSpec_peer_2fchaincode_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chaincode_id_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&chaincode_id_)) + sizeof(timeout_));
}

ChaincodeSpec::~ChaincodeSpec() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chaincode_id_;
  if (this != internal_default_instance()) delete input_;
}

void ChaincodeSpec::ArenaDtor(void* object) {
  ChaincodeSpec* _this = reinterpret_cast< ChaincodeSpec* >(object);
  (void)_this;
}
void ChaincodeSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeSpec& ChaincodeSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeSpec_peer_2fchaincode_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chaincode_id_ != nullptr) {
    delete chaincode_id_;
  }
  chaincode_id_ = nullptr;
  if (GetArena() == nullptr && input_ != nullptr) {
    delete input_;
  }
  input_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeout_) -
      reinterpret_cast<char*>(&type_)) + sizeof(timeout_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protos.ChaincodeSpec.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::protos::ChaincodeSpec_Type>(val));
        } else goto handle_unusual;
        continue;
      // .protos.ChaincodeID chaincode_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chaincode_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.ChaincodeInput input = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 timeout = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          timeout_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.ChaincodeSpec.Type type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .protos.ChaincodeID chaincode_id = 2;
  if (this->has_chaincode_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chaincode_id(this), target, stream);
  }

  // .protos.ChaincodeInput input = 3;
  if (this->has_input()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::input(this), target, stream);
  }

  // int32 timeout = 4;
  if (this->timeout() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_timeout(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeSpec)
  return target;
}

size_t ChaincodeSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.ChaincodeID chaincode_id = 2;
  if (this->has_chaincode_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chaincode_id_);
  }

  // .protos.ChaincodeInput input = 3;
  if (this->has_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_);
  }

  // .protos.ChaincodeSpec.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // int32 timeout = 4;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_timeout());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeSpec)
    MergeFrom(*source);
  }
}

void ChaincodeSpec::MergeFrom(const ChaincodeSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chaincode_id()) {
    _internal_mutable_chaincode_id()->::protos::ChaincodeID::MergeFrom(from._internal_chaincode_id());
  }
  if (from.has_input()) {
    _internal_mutable_input()->::protos::ChaincodeInput::MergeFrom(from._internal_input());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.timeout() != 0) {
    _internal_set_timeout(from._internal_timeout());
  }
}

void ChaincodeSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeSpec::CopyFrom(const ChaincodeSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeSpec::IsInitialized() const {
  return true;
}

void ChaincodeSpec::InternalSwap(ChaincodeSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChaincodeSpec, timeout_)
      + sizeof(ChaincodeSpec::timeout_)
      - PROTOBUF_FIELD_OFFSET(ChaincodeSpec, chaincode_id_)>(
          reinterpret_cast<char*>(&chaincode_id_),
          reinterpret_cast<char*>(&other->chaincode_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ChaincodeDeploymentSpec::_Internal {
 public:
  static const ::protos::ChaincodeSpec& chaincode_spec(const ChaincodeDeploymentSpec* msg);
};

const ::protos::ChaincodeSpec&
ChaincodeDeploymentSpec::_Internal::chaincode_spec(const ChaincodeDeploymentSpec* msg) {
  return *msg->chaincode_spec_;
}
ChaincodeDeploymentSpec::ChaincodeDeploymentSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeDeploymentSpec)
}
ChaincodeDeploymentSpec::ChaincodeDeploymentSpec(const ChaincodeDeploymentSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_code_package().empty()) {
    code_package_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_code_package(), 
      GetArena());
  }
  if (from._internal_has_chaincode_spec()) {
    chaincode_spec_ = new ::protos::ChaincodeSpec(*from.chaincode_spec_);
  } else {
    chaincode_spec_ = nullptr;
  }
  exec_env_ = from.exec_env_;
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeDeploymentSpec)
}

void ChaincodeDeploymentSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeDeploymentSpec_peer_2fchaincode_2eproto.base);
  code_package_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&chaincode_spec_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&exec_env_) -
      reinterpret_cast<char*>(&chaincode_spec_)) + sizeof(exec_env_));
}

ChaincodeDeploymentSpec::~ChaincodeDeploymentSpec() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeDeploymentSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeDeploymentSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  code_package_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete chaincode_spec_;
}

void ChaincodeDeploymentSpec::ArenaDtor(void* object) {
  ChaincodeDeploymentSpec* _this = reinterpret_cast< ChaincodeDeploymentSpec* >(object);
  (void)_this;
}
void ChaincodeDeploymentSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeDeploymentSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeDeploymentSpec& ChaincodeDeploymentSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeDeploymentSpec_peer_2fchaincode_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeDeploymentSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeDeploymentSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_package_.ClearToEmpty();
  if (GetArena() == nullptr && chaincode_spec_ != nullptr) {
    delete chaincode_spec_;
  }
  chaincode_spec_ = nullptr;
  exec_env_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeDeploymentSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protos.ChaincodeSpec chaincode_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chaincode_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes code_package = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_code_package();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.ChaincodeDeploymentSpec.ExecutionEnvironment exec_env = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_exec_env(static_cast<::protos::ChaincodeDeploymentSpec_ExecutionEnvironment>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeDeploymentSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeDeploymentSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.ChaincodeSpec chaincode_spec = 1;
  if (this->has_chaincode_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chaincode_spec(this), target, stream);
  }

  // bytes code_package = 3;
  if (this->code_package().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_code_package(), target);
  }

  // .protos.ChaincodeDeploymentSpec.ExecutionEnvironment exec_env = 4;
  if (this->exec_env() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_exec_env(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeDeploymentSpec)
  return target;
}

size_t ChaincodeDeploymentSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeDeploymentSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes code_package = 3;
  if (this->code_package().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_code_package());
  }

  // .protos.ChaincodeSpec chaincode_spec = 1;
  if (this->has_chaincode_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chaincode_spec_);
  }

  // .protos.ChaincodeDeploymentSpec.ExecutionEnvironment exec_env = 4;
  if (this->exec_env() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_exec_env());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeDeploymentSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeDeploymentSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeDeploymentSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeDeploymentSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeDeploymentSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeDeploymentSpec)
    MergeFrom(*source);
  }
}

void ChaincodeDeploymentSpec::MergeFrom(const ChaincodeDeploymentSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeDeploymentSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code_package().size() > 0) {
    _internal_set_code_package(from._internal_code_package());
  }
  if (from.has_chaincode_spec()) {
    _internal_mutable_chaincode_spec()->::protos::ChaincodeSpec::MergeFrom(from._internal_chaincode_spec());
  }
  if (from.exec_env() != 0) {
    _internal_set_exec_env(from._internal_exec_env());
  }
}

void ChaincodeDeploymentSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeDeploymentSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeDeploymentSpec::CopyFrom(const ChaincodeDeploymentSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeDeploymentSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeDeploymentSpec::IsInitialized() const {
  return true;
}

void ChaincodeDeploymentSpec::InternalSwap(ChaincodeDeploymentSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  code_package_.Swap(&other->code_package_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChaincodeDeploymentSpec, exec_env_)
      + sizeof(ChaincodeDeploymentSpec::exec_env_)
      - PROTOBUF_FIELD_OFFSET(ChaincodeDeploymentSpec, chaincode_spec_)>(
          reinterpret_cast<char*>(&chaincode_spec_),
          reinterpret_cast<char*>(&other->chaincode_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeDeploymentSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ChaincodeInvocationSpec::_Internal {
 public:
  static const ::protos::ChaincodeSpec& chaincode_spec(const ChaincodeInvocationSpec* msg);
};

const ::protos::ChaincodeSpec&
ChaincodeInvocationSpec::_Internal::chaincode_spec(const ChaincodeInvocationSpec* msg) {
  return *msg->chaincode_spec_;
}
ChaincodeInvocationSpec::ChaincodeInvocationSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeInvocationSpec)
}
ChaincodeInvocationSpec::ChaincodeInvocationSpec(const ChaincodeInvocationSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_chaincode_spec()) {
    chaincode_spec_ = new ::protos::ChaincodeSpec(*from.chaincode_spec_);
  } else {
    chaincode_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeInvocationSpec)
}

void ChaincodeInvocationSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeInvocationSpec_peer_2fchaincode_2eproto.base);
  chaincode_spec_ = nullptr;
}

ChaincodeInvocationSpec::~ChaincodeInvocationSpec() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeInvocationSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeInvocationSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete chaincode_spec_;
}

void ChaincodeInvocationSpec::ArenaDtor(void* object) {
  ChaincodeInvocationSpec* _this = reinterpret_cast< ChaincodeInvocationSpec* >(object);
  (void)_this;
}
void ChaincodeInvocationSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeInvocationSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeInvocationSpec& ChaincodeInvocationSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeInvocationSpec_peer_2fchaincode_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeInvocationSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeInvocationSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && chaincode_spec_ != nullptr) {
    delete chaincode_spec_;
  }
  chaincode_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeInvocationSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protos.ChaincodeSpec chaincode_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_chaincode_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeInvocationSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeInvocationSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.ChaincodeSpec chaincode_spec = 1;
  if (this->has_chaincode_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::chaincode_spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeInvocationSpec)
  return target;
}

size_t ChaincodeInvocationSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeInvocationSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .protos.ChaincodeSpec chaincode_spec = 1;
  if (this->has_chaincode_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chaincode_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeInvocationSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeInvocationSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeInvocationSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeInvocationSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeInvocationSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeInvocationSpec)
    MergeFrom(*source);
  }
}

void ChaincodeInvocationSpec::MergeFrom(const ChaincodeInvocationSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeInvocationSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chaincode_spec()) {
    _internal_mutable_chaincode_spec()->::protos::ChaincodeSpec::MergeFrom(from._internal_chaincode_spec());
  }
}

void ChaincodeInvocationSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeInvocationSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeInvocationSpec::CopyFrom(const ChaincodeInvocationSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeInvocationSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeInvocationSpec::IsInitialized() const {
  return true;
}

void ChaincodeInvocationSpec::InternalSwap(ChaincodeInvocationSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(chaincode_spec_, other->chaincode_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeInvocationSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LifecycleEvent::_Internal {
 public:
};

LifecycleEvent::LifecycleEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.LifecycleEvent)
}
LifecycleEvent::LifecycleEvent(const LifecycleEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chaincode_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chaincode_name().empty()) {
    chaincode_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_chaincode_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.LifecycleEvent)
}

void LifecycleEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LifecycleEvent_peer_2fchaincode_2eproto.base);
  chaincode_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LifecycleEvent::~LifecycleEvent() {
  // @@protoc_insertion_point(destructor:protos.LifecycleEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LifecycleEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  chaincode_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LifecycleEvent::ArenaDtor(void* object) {
  LifecycleEvent* _this = reinterpret_cast< LifecycleEvent* >(object);
  (void)_this;
}
void LifecycleEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LifecycleEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LifecycleEvent& LifecycleEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LifecycleEvent_peer_2fchaincode_2eproto.base);
  return *internal_default_instance();
}


void LifecycleEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.LifecycleEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chaincode_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LifecycleEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string chaincode_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_chaincode_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protos.LifecycleEvent.chaincode_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LifecycleEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.LifecycleEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chaincode_name = 1;
  if (this->chaincode_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chaincode_name().data(), static_cast<int>(this->_internal_chaincode_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protos.LifecycleEvent.chaincode_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_chaincode_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.LifecycleEvent)
  return target;
}

size_t LifecycleEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.LifecycleEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string chaincode_name = 1;
  if (this->chaincode_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chaincode_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LifecycleEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.LifecycleEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const LifecycleEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LifecycleEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.LifecycleEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.LifecycleEvent)
    MergeFrom(*source);
  }
}

void LifecycleEvent::MergeFrom(const LifecycleEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.LifecycleEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chaincode_name().size() > 0) {
    _internal_set_chaincode_name(from._internal_chaincode_name());
  }
}

void LifecycleEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.LifecycleEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LifecycleEvent::CopyFrom(const LifecycleEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.LifecycleEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LifecycleEvent::IsInitialized() const {
  return true;
}

void LifecycleEvent::InternalSwap(LifecycleEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chaincode_name_.Swap(&other->chaincode_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LifecycleEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protos::ChaincodeID* Arena::CreateMaybeMessage< ::protos::ChaincodeID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeID >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeInput_DecorationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::protos::ChaincodeInput_DecorationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeInput_DecorationsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeInput* Arena::CreateMaybeMessage< ::protos::ChaincodeInput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeInput >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeSpec* Arena::CreateMaybeMessage< ::protos::ChaincodeSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeDeploymentSpec* Arena::CreateMaybeMessage< ::protos::ChaincodeDeploymentSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeDeploymentSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeInvocationSpec* Arena::CreateMaybeMessage< ::protos::ChaincodeInvocationSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeInvocationSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::LifecycleEvent* Arena::CreateMaybeMessage< ::protos::LifecycleEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::LifecycleEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
