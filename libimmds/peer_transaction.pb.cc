// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer/transaction.proto

#include "peer/transaction.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_2fcommon_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Envelope_common_2fcommon_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2ftransaction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2fproposal_5fresponse_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Endorsement_peer_2fproposal_5fresponse_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2ftransaction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransactionAction_peer_2ftransaction_2eproto;
namespace protos {
class SignedTransactionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignedTransaction> _instance;
} _SignedTransaction_default_instance_;
class ProcessedTransactionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessedTransaction> _instance;
} _ProcessedTransaction_default_instance_;
class TransactionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Transaction> _instance;
} _Transaction_default_instance_;
class TransactionActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TransactionAction> _instance;
} _TransactionAction_default_instance_;
class ChaincodeActionPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeActionPayload> _instance;
} _ChaincodeActionPayload_default_instance_;
class ChaincodeEndorsedActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeEndorsedAction> _instance;
} _ChaincodeEndorsedAction_default_instance_;
}  // namespace protos
static void InitDefaultsscc_info_ChaincodeActionPayload_peer_2ftransaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeActionPayload_default_instance_;
    new (ptr) ::protos::ChaincodeActionPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::ChaincodeActionPayload::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeActionPayload_peer_2ftransaction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeActionPayload_peer_2ftransaction_2eproto}, {
      &scc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeEndorsedAction_default_instance_;
    new (ptr) ::protos::ChaincodeEndorsedAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::ChaincodeEndorsedAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto}, {
      &scc_info_Endorsement_peer_2fproposal_5fresponse_2eproto.base,}};

static void InitDefaultsscc_info_ProcessedTransaction_peer_2ftransaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ProcessedTransaction_default_instance_;
    new (ptr) ::protos::ProcessedTransaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::ProcessedTransaction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProcessedTransaction_peer_2ftransaction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProcessedTransaction_peer_2ftransaction_2eproto}, {
      &scc_info_Envelope_common_2fcommon_2eproto.base,}};

static void InitDefaultsscc_info_SignedTransaction_peer_2ftransaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_SignedTransaction_default_instance_;
    new (ptr) ::protos::SignedTransaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::SignedTransaction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignedTransaction_peer_2ftransaction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SignedTransaction_peer_2ftransaction_2eproto}, {}};

static void InitDefaultsscc_info_Transaction_peer_2ftransaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Transaction_default_instance_;
    new (ptr) ::protos::Transaction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Transaction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Transaction_peer_2ftransaction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Transaction_peer_2ftransaction_2eproto}, {
      &scc_info_TransactionAction_peer_2ftransaction_2eproto.base,}};

static void InitDefaultsscc_info_TransactionAction_peer_2ftransaction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_TransactionAction_default_instance_;
    new (ptr) ::protos::TransactionAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::TransactionAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TransactionAction_peer_2ftransaction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TransactionAction_peer_2ftransaction_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_peer_2ftransaction_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_peer_2ftransaction_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_peer_2ftransaction_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_peer_2ftransaction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::SignedTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::SignedTransaction, transaction_bytes_),
  PROTOBUF_FIELD_OFFSET(::protos::SignedTransaction, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ProcessedTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ProcessedTransaction, transactionenvelope_),
  PROTOBUF_FIELD_OFFSET(::protos::ProcessedTransaction, validationcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Transaction, actions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::TransactionAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::TransactionAction, header_),
  PROTOBUF_FIELD_OFFSET(::protos::TransactionAction, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeActionPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeActionPayload, chaincode_proposal_payload_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeActionPayload, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeEndorsedAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeEndorsedAction, proposal_response_payload_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeEndorsedAction, endorsements_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::SignedTransaction)},
  { 7, -1, sizeof(::protos::ProcessedTransaction)},
  { 14, -1, sizeof(::protos::Transaction)},
  { 20, -1, sizeof(::protos::TransactionAction)},
  { 27, -1, sizeof(::protos::ChaincodeActionPayload)},
  { 34, -1, sizeof(::protos::ChaincodeEndorsedAction)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_SignedTransaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ProcessedTransaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_Transaction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_TransactionAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeActionPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeEndorsedAction_default_instance_),
};

const char descriptor_table_protodef_peer_2ftransaction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026peer/transaction.proto\022\006protos\032\037google"
  "/protobuf/timestamp.proto\032\034peer/proposal"
  "_response.proto\032\023common/common.proto\"A\n\021"
  "SignedTransaction\022\031\n\021transaction_bytes\030\001"
  " \001(\014\022\021\n\tsignature\030\002 \001(\014\"]\n\024ProcessedTran"
  "saction\022-\n\023transactionEnvelope\030\001 \001(\0132\020.c"
  "ommon.Envelope\022\026\n\016validationCode\030\002 \001(\005\"9"
  "\n\013Transaction\022*\n\007actions\030\001 \003(\0132\031.protos."
  "TransactionAction\"4\n\021TransactionAction\022\016"
  "\n\006header\030\001 \001(\014\022\017\n\007payload\030\002 \001(\014\"m\n\026Chain"
  "codeActionPayload\022\"\n\032chaincode_proposal_"
  "payload\030\001 \001(\014\022/\n\006action\030\002 \001(\0132\037.protos.C"
  "haincodeEndorsedAction\"g\n\027ChaincodeEndor"
  "sedAction\022!\n\031proposal_response_payload\030\001"
  " \001(\014\022)\n\014endorsements\030\002 \003(\0132\023.protos.Endo"
  "rsement*\224\005\n\020TxValidationCode\022\t\n\005VALID\020\000\022"
  "\020\n\014NIL_ENVELOPE\020\001\022\017\n\013BAD_PAYLOAD\020\002\022\025\n\021BA"
  "D_COMMON_HEADER\020\003\022\031\n\025BAD_CREATOR_SIGNATU"
  "RE\020\004\022 \n\034INVALID_ENDORSER_TRANSACTION\020\005\022\036"
  "\n\032INVALID_CONFIG_TRANSACTION\020\006\022\032\n\026UNSUPP"
  "ORTED_TX_PAYLOAD\020\007\022\025\n\021BAD_PROPOSAL_TXID\020"
  "\010\022\022\n\016DUPLICATE_TXID\020\t\022\036\n\032ENDORSEMENT_POL"
  "ICY_FAILURE\020\n\022\026\n\022MVCC_READ_CONFLICT\020\013\022\031\n"
  "\025PHANTOM_READ_CONFLICT\020\014\022\023\n\017UNKNOWN_TX_T"
  "YPE\020\r\022\032\n\026TARGET_CHAIN_NOT_FOUND\020\016\022\024\n\020MAR"
  "SHAL_TX_ERROR\020\017\022\020\n\014NIL_TXACTION\020\020\022\025\n\021EXP"
  "IRED_CHAINCODE\020\021\022\036\n\032CHAINCODE_VERSION_CO"
  "NFLICT\020\022\022\030\n\024BAD_HEADER_EXTENSION\020\023\022\026\n\022BA"
  "D_CHANNEL_HEADER\020\024\022\030\n\024BAD_RESPONSE_PAYLO"
  "AD\020\025\022\r\n\tBAD_RWSET\020\026\022\024\n\020ILLEGAL_WRITESET\020"
  "\027\022\024\n\020INVALID_WRITESET\020\030\022\022\n\rNOT_VALIDATED"
  "\020\376\001\022\031\n\024INVALID_OTHER_REASON\020\377\001*(\n\014MetaDa"
  "taKeys\022\030\n\024VALIDATION_PARAMETER\020\000Bc\n\"org."
  "hyperledger.fabric.protos.peerB\022Transact"
  "ionPackageZ)github.com/hyperledger/fabri"
  "c/protos/peerb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_peer_2ftransaction_2eproto_deps[3] = {
  &::descriptor_table_common_2fcommon_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_peer_2fproposal_5fresponse_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_peer_2ftransaction_2eproto_sccs[6] = {
  &scc_info_ChaincodeActionPayload_peer_2ftransaction_2eproto.base,
  &scc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto.base,
  &scc_info_ProcessedTransaction_peer_2ftransaction_2eproto.base,
  &scc_info_SignedTransaction_peer_2ftransaction_2eproto.base,
  &scc_info_Transaction_peer_2ftransaction_2eproto.base,
  &scc_info_TransactionAction_peer_2ftransaction_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_peer_2ftransaction_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_peer_2ftransaction_2eproto = {
  false, false, descriptor_table_protodef_peer_2ftransaction_2eproto, "peer/transaction.proto", 1421,
  &descriptor_table_peer_2ftransaction_2eproto_once, descriptor_table_peer_2ftransaction_2eproto_sccs, descriptor_table_peer_2ftransaction_2eproto_deps, 6, 3,
  schemas, file_default_instances, TableStruct_peer_2ftransaction_2eproto::offsets,
  file_level_metadata_peer_2ftransaction_2eproto, 6, file_level_enum_descriptors_peer_2ftransaction_2eproto, file_level_service_descriptors_peer_2ftransaction_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_peer_2ftransaction_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_peer_2ftransaction_2eproto)), true);
namespace protos {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TxValidationCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_peer_2ftransaction_2eproto);
  return file_level_enum_descriptors_peer_2ftransaction_2eproto[0];
}
bool TxValidationCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 254:
    case 255:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MetaDataKeys_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_peer_2ftransaction_2eproto);
  return file_level_enum_descriptors_peer_2ftransaction_2eproto[1];
}
bool MetaDataKeys_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SignedTransaction::InitAsDefaultInstance() {
}
class SignedTransaction::_Internal {
 public:
};

SignedTransaction::SignedTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.SignedTransaction)
}
SignedTransaction::SignedTransaction(const SignedTransaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transaction_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_transaction_bytes().empty()) {
    transaction_bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_transaction_bytes(),
      GetArena());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_signature(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.SignedTransaction)
}

void SignedTransaction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignedTransaction_peer_2ftransaction_2eproto.base);
  transaction_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SignedTransaction::~SignedTransaction() {
  // @@protoc_insertion_point(destructor:protos.SignedTransaction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignedTransaction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  transaction_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SignedTransaction::ArenaDtor(void* object) {
  SignedTransaction* _this = reinterpret_cast< SignedTransaction* >(object);
  (void)_this;
}
void SignedTransaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignedTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignedTransaction& SignedTransaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignedTransaction_peer_2ftransaction_2eproto.base);
  return *internal_default_instance();
}


void SignedTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.SignedTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_bytes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignedTransaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes transaction_bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_transaction_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes signature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignedTransaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.SignedTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes transaction_bytes = 1;
  if (this->transaction_bytes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_transaction_bytes(), target);
  }

  // bytes signature = 2;
  if (this->signature().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.SignedTransaction)
  return target;
}

size_t SignedTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.SignedTransaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes transaction_bytes = 1;
  if (this->transaction_bytes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_transaction_bytes());
  }

  // bytes signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignedTransaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.SignedTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const SignedTransaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignedTransaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.SignedTransaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.SignedTransaction)
    MergeFrom(*source);
  }
}

void SignedTransaction::MergeFrom(const SignedTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.SignedTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transaction_bytes().size() > 0) {
    _internal_set_transaction_bytes(from._internal_transaction_bytes());
  }
  if (from.signature().size() > 0) {
    _internal_set_signature(from._internal_signature());
  }
}

void SignedTransaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.SignedTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignedTransaction::CopyFrom(const SignedTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.SignedTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignedTransaction::IsInitialized() const {
  return true;
}

void SignedTransaction::InternalSwap(SignedTransaction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transaction_bytes_.Swap(&other->transaction_bytes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SignedTransaction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessedTransaction::InitAsDefaultInstance() {
  ::protos::_ProcessedTransaction_default_instance_._instance.get_mutable()->transactionenvelope_ = const_cast< ::common::Envelope*>(
      ::common::Envelope::internal_default_instance());
}
class ProcessedTransaction::_Internal {
 public:
  static const ::common::Envelope& transactionenvelope(const ProcessedTransaction* msg);
};

const ::common::Envelope&
ProcessedTransaction::_Internal::transactionenvelope(const ProcessedTransaction* msg) {
  return *msg->transactionenvelope_;
}
void ProcessedTransaction::clear_transactionenvelope() {
  if (GetArena() == nullptr && transactionenvelope_ != nullptr) {
    delete transactionenvelope_;
  }
  transactionenvelope_ = nullptr;
}
ProcessedTransaction::ProcessedTransaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ProcessedTransaction)
}
ProcessedTransaction::ProcessedTransaction(const ProcessedTransaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transactionenvelope()) {
    transactionenvelope_ = new ::common::Envelope(*from.transactionenvelope_);
  } else {
    transactionenvelope_ = nullptr;
  }
  validationcode_ = from.validationcode_;
  // @@protoc_insertion_point(copy_constructor:protos.ProcessedTransaction)
}

void ProcessedTransaction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessedTransaction_peer_2ftransaction_2eproto.base);
  ::memset(&transactionenvelope_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validationcode_) -
      reinterpret_cast<char*>(&transactionenvelope_)) + sizeof(validationcode_));
}

ProcessedTransaction::~ProcessedTransaction() {
  // @@protoc_insertion_point(destructor:protos.ProcessedTransaction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProcessedTransaction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete transactionenvelope_;
}

void ProcessedTransaction::ArenaDtor(void* object) {
  ProcessedTransaction* _this = reinterpret_cast< ProcessedTransaction* >(object);
  (void)_this;
}
void ProcessedTransaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProcessedTransaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessedTransaction& ProcessedTransaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessedTransaction_peer_2ftransaction_2eproto.base);
  return *internal_default_instance();
}


void ProcessedTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ProcessedTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && transactionenvelope_ != nullptr) {
    delete transactionenvelope_;
  }
  transactionenvelope_ = nullptr;
  validationcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessedTransaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .common.Envelope transactionEnvelope = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transactionenvelope(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 validationCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          validationcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessedTransaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ProcessedTransaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Envelope transactionEnvelope = 1;
  if (this->has_transactionenvelope()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::transactionenvelope(this), target, stream);
  }

  // int32 validationCode = 2;
  if (this->validationcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_validationcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ProcessedTransaction)
  return target;
}

size_t ProcessedTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ProcessedTransaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .common.Envelope transactionEnvelope = 1;
  if (this->has_transactionenvelope()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transactionenvelope_);
  }

  // int32 validationCode = 2;
  if (this->validationcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_validationcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessedTransaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ProcessedTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessedTransaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessedTransaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ProcessedTransaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ProcessedTransaction)
    MergeFrom(*source);
  }
}

void ProcessedTransaction::MergeFrom(const ProcessedTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ProcessedTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transactionenvelope()) {
    _internal_mutable_transactionenvelope()->::common::Envelope::MergeFrom(from._internal_transactionenvelope());
  }
  if (from.validationcode() != 0) {
    _internal_set_validationcode(from._internal_validationcode());
  }
}

void ProcessedTransaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ProcessedTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessedTransaction::CopyFrom(const ProcessedTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ProcessedTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessedTransaction::IsInitialized() const {
  return true;
}

void ProcessedTransaction::InternalSwap(ProcessedTransaction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProcessedTransaction, validationcode_)
      + sizeof(ProcessedTransaction::validationcode_)
      - PROTOBUF_FIELD_OFFSET(ProcessedTransaction, transactionenvelope_)>(
          reinterpret_cast<char*>(&transactionenvelope_),
          reinterpret_cast<char*>(&other->transactionenvelope_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessedTransaction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Transaction::InitAsDefaultInstance() {
}
class Transaction::_Internal {
 public:
};

Transaction::Transaction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protos.Transaction)
}

void Transaction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Transaction_peer_2ftransaction_2eproto.base);
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:protos.Transaction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Transaction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Transaction::ArenaDtor(void* object) {
  Transaction* _this = reinterpret_cast< Transaction* >(object);
  (void)_this;
}
void Transaction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Transaction& Transaction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Transaction_peer_2ftransaction_2eproto.base);
  return *internal_default_instance();
}


void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Transaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Transaction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .protos.TransactionAction actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Transaction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.Transaction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .protos.TransactionAction actions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_actions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_actions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Transaction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protos.TransactionAction actions = 1;
  total_size += 1UL * this->_internal_actions_size();
  for (const auto& msg : this->actions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transaction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Transaction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Transaction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
}

void Transaction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Transaction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TransactionAction::InitAsDefaultInstance() {
}
class TransactionAction::_Internal {
 public:
};

TransactionAction::TransactionAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.TransactionAction)
}
TransactionAction::TransactionAction(const TransactionAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_header().empty()) {
    header_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_header(),
      GetArena());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.TransactionAction)
}

void TransactionAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TransactionAction_peer_2ftransaction_2eproto.base);
  header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TransactionAction::~TransactionAction() {
  // @@protoc_insertion_point(destructor:protos.TransactionAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TransactionAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  header_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TransactionAction::ArenaDtor(void* object) {
  TransactionAction* _this = reinterpret_cast< TransactionAction* >(object);
  (void)_this;
}
void TransactionAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TransactionAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransactionAction& TransactionAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TransactionAction_peer_2ftransaction_2eproto.base);
  return *internal_default_instance();
}


void TransactionAction::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.TransactionAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  header_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TransactionAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_header();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TransactionAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.TransactionAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes header = 1;
  if (this->header().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_header(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.TransactionAction)
  return target;
}

size_t TransactionAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.TransactionAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes header = 1;
  if (this->header().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_header());
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransactionAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.TransactionAction)
  GOOGLE_DCHECK_NE(&from, this);
  const TransactionAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TransactionAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.TransactionAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.TransactionAction)
    MergeFrom(*source);
  }
}

void TransactionAction::MergeFrom(const TransactionAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.TransactionAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.header().size() > 0) {
    _internal_set_header(from._internal_header());
  }
  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
}

void TransactionAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.TransactionAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransactionAction::CopyFrom(const TransactionAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.TransactionAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransactionAction::IsInitialized() const {
  return true;
}

void TransactionAction::InternalSwap(TransactionAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  header_.Swap(&other->header_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TransactionAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChaincodeActionPayload::InitAsDefaultInstance() {
  ::protos::_ChaincodeActionPayload_default_instance_._instance.get_mutable()->action_ = const_cast< ::protos::ChaincodeEndorsedAction*>(
      ::protos::ChaincodeEndorsedAction::internal_default_instance());
}
class ChaincodeActionPayload::_Internal {
 public:
  static const ::protos::ChaincodeEndorsedAction& action(const ChaincodeActionPayload* msg);
};

const ::protos::ChaincodeEndorsedAction&
ChaincodeActionPayload::_Internal::action(const ChaincodeActionPayload* msg) {
  return *msg->action_;
}
ChaincodeActionPayload::ChaincodeActionPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeActionPayload)
}
ChaincodeActionPayload::ChaincodeActionPayload(const ChaincodeActionPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  chaincode_proposal_payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chaincode_proposal_payload().empty()) {
    chaincode_proposal_payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_chaincode_proposal_payload(),
      GetArena());
  }
  if (from._internal_has_action()) {
    action_ = new ::protos::ChaincodeEndorsedAction(*from.action_);
  } else {
    action_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeActionPayload)
}

void ChaincodeActionPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeActionPayload_peer_2ftransaction_2eproto.base);
  chaincode_proposal_payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  action_ = nullptr;
}

ChaincodeActionPayload::~ChaincodeActionPayload() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeActionPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeActionPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  chaincode_proposal_payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete action_;
}

void ChaincodeActionPayload::ArenaDtor(void* object) {
  ChaincodeActionPayload* _this = reinterpret_cast< ChaincodeActionPayload* >(object);
  (void)_this;
}
void ChaincodeActionPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeActionPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeActionPayload& ChaincodeActionPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeActionPayload_peer_2ftransaction_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeActionPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeActionPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chaincode_proposal_payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && action_ != nullptr) {
    delete action_;
  }
  action_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeActionPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes chaincode_proposal_payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_chaincode_proposal_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.ChaincodeEndorsedAction action = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeActionPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeActionPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chaincode_proposal_payload = 1;
  if (this->chaincode_proposal_payload().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_chaincode_proposal_payload(), target);
  }

  // .protos.ChaincodeEndorsedAction action = 2;
  if (this->has_action()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::action(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeActionPayload)
  return target;
}

size_t ChaincodeActionPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeActionPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes chaincode_proposal_payload = 1;
  if (this->chaincode_proposal_payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_chaincode_proposal_payload());
  }

  // .protos.ChaincodeEndorsedAction action = 2;
  if (this->has_action()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeActionPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeActionPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeActionPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeActionPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeActionPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeActionPayload)
    MergeFrom(*source);
  }
}

void ChaincodeActionPayload::MergeFrom(const ChaincodeActionPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeActionPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chaincode_proposal_payload().size() > 0) {
    _internal_set_chaincode_proposal_payload(from._internal_chaincode_proposal_payload());
  }
  if (from.has_action()) {
    _internal_mutable_action()->::protos::ChaincodeEndorsedAction::MergeFrom(from._internal_action());
  }
}

void ChaincodeActionPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeActionPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeActionPayload::CopyFrom(const ChaincodeActionPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeActionPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeActionPayload::IsInitialized() const {
  return true;
}

void ChaincodeActionPayload::InternalSwap(ChaincodeActionPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  chaincode_proposal_payload_.Swap(&other->chaincode_proposal_payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(action_, other->action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeActionPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChaincodeEndorsedAction::InitAsDefaultInstance() {
}
class ChaincodeEndorsedAction::_Internal {
 public:
};

void ChaincodeEndorsedAction::clear_endorsements() {
  endorsements_.Clear();
}
ChaincodeEndorsedAction::ChaincodeEndorsedAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  endorsements_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeEndorsedAction)
}
ChaincodeEndorsedAction::ChaincodeEndorsedAction(const ChaincodeEndorsedAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      endorsements_(from.endorsements_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proposal_response_payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proposal_response_payload().empty()) {
    proposal_response_payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proposal_response_payload(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeEndorsedAction)
}

void ChaincodeEndorsedAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto.base);
  proposal_response_payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChaincodeEndorsedAction::~ChaincodeEndorsedAction() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeEndorsedAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeEndorsedAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  proposal_response_payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChaincodeEndorsedAction::ArenaDtor(void* object) {
  ChaincodeEndorsedAction* _this = reinterpret_cast< ChaincodeEndorsedAction* >(object);
  (void)_this;
}
void ChaincodeEndorsedAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeEndorsedAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeEndorsedAction& ChaincodeEndorsedAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeEndorsedAction_peer_2ftransaction_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeEndorsedAction::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeEndorsedAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endorsements_.Clear();
  proposal_response_payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeEndorsedAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes proposal_response_payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_proposal_response_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .protos.Endorsement endorsements = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_endorsements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeEndorsedAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeEndorsedAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes proposal_response_payload = 1;
  if (this->proposal_response_payload().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_proposal_response_payload(), target);
  }

  // repeated .protos.Endorsement endorsements = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_endorsements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_endorsements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeEndorsedAction)
  return target;
}

size_t ChaincodeEndorsedAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeEndorsedAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .protos.Endorsement endorsements = 2;
  total_size += 1UL * this->_internal_endorsements_size();
  for (const auto& msg : this->endorsements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes proposal_response_payload = 1;
  if (this->proposal_response_payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_proposal_response_payload());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeEndorsedAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeEndorsedAction)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeEndorsedAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeEndorsedAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeEndorsedAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeEndorsedAction)
    MergeFrom(*source);
  }
}

void ChaincodeEndorsedAction::MergeFrom(const ChaincodeEndorsedAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeEndorsedAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  endorsements_.MergeFrom(from.endorsements_);
  if (from.proposal_response_payload().size() > 0) {
    _internal_set_proposal_response_payload(from._internal_proposal_response_payload());
  }
}

void ChaincodeEndorsedAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeEndorsedAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeEndorsedAction::CopyFrom(const ChaincodeEndorsedAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeEndorsedAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeEndorsedAction::IsInitialized() const {
  return true;
}

void ChaincodeEndorsedAction::InternalSwap(ChaincodeEndorsedAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  endorsements_.InternalSwap(&other->endorsements_);
  proposal_response_payload_.Swap(&other->proposal_response_payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeEndorsedAction::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protos::SignedTransaction* Arena::CreateMaybeMessage< ::protos::SignedTransaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::SignedTransaction >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ProcessedTransaction* Arena::CreateMaybeMessage< ::protos::ProcessedTransaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ProcessedTransaction >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::Transaction* Arena::CreateMaybeMessage< ::protos::Transaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::Transaction >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::TransactionAction* Arena::CreateMaybeMessage< ::protos::TransactionAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::TransactionAction >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeActionPayload* Arena::CreateMaybeMessage< ::protos::ChaincodeActionPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeActionPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeEndorsedAction* Arena::CreateMaybeMessage< ::protos::ChaincodeEndorsedAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeEndorsedAction >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
