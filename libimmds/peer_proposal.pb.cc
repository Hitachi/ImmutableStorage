// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: peer/proposal.proto

#include "peer/proposal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_peer_2fchaincode_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeID_peer_2fchaincode_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2fproposal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_peer_2fproposal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_peer_2fproposal_5fresponse_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Response_peer_2fproposal_5fresponse_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_token_2fexpectations_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TokenExpectation_token_2fexpectations_2eproto;
namespace protos {
class SignedProposalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SignedProposal> _instance;
} _SignedProposal_default_instance_;
class ProposalDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Proposal> _instance;
} _Proposal_default_instance_;
class ChaincodeHeaderExtensionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeHeaderExtension> _instance;
} _ChaincodeHeaderExtension_default_instance_;
class ChaincodeProposalPayload_TransientMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeProposalPayload_TransientMapEntry_DoNotUse> _instance;
} _ChaincodeProposalPayload_TransientMapEntry_DoNotUse_default_instance_;
class ChaincodeProposalPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeProposalPayload> _instance;
} _ChaincodeProposalPayload_default_instance_;
class ChaincodeActionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChaincodeAction> _instance;
} _ChaincodeAction_default_instance_;
}  // namespace protos
static void InitDefaultsscc_info_ChaincodeAction_peer_2fproposal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeAction_default_instance_;
    new (ptr) ::protos::ChaincodeAction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::ChaincodeAction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ChaincodeAction_peer_2fproposal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ChaincodeAction_peer_2fproposal_2eproto}, {
      &scc_info_Response_peer_2fproposal_5fresponse_2eproto.base,
      &scc_info_ChaincodeID_peer_2fchaincode_2eproto.base,
      &scc_info_TokenExpectation_token_2fexpectations_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeHeaderExtension_peer_2fproposal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeHeaderExtension_default_instance_;
    new (ptr) ::protos::ChaincodeHeaderExtension();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::ChaincodeHeaderExtension::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeHeaderExtension_peer_2fproposal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeHeaderExtension_peer_2fproposal_2eproto}, {
      &scc_info_ChaincodeID_peer_2fchaincode_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeProposalPayload_peer_2fproposal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeProposalPayload_default_instance_;
    new (ptr) ::protos::ChaincodeProposalPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::ChaincodeProposalPayload::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChaincodeProposalPayload_peer_2fproposal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChaincodeProposalPayload_peer_2fproposal_2eproto}, {
      &scc_info_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_peer_2fproposal_2eproto.base,}};

static void InitDefaultsscc_info_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_peer_2fproposal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_default_instance_;
    new (ptr) ::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse();
  }
  ::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_peer_2fproposal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_peer_2fproposal_2eproto}, {}};

static void InitDefaultsscc_info_Proposal_peer_2fproposal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_Proposal_default_instance_;
    new (ptr) ::protos::Proposal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::Proposal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Proposal_peer_2fproposal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Proposal_peer_2fproposal_2eproto}, {}};

static void InitDefaultsscc_info_SignedProposal_peer_2fproposal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_SignedProposal_default_instance_;
    new (ptr) ::protos::SignedProposal();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::SignedProposal::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SignedProposal_peer_2fproposal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SignedProposal_peer_2fproposal_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_peer_2fproposal_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_peer_2fproposal_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_peer_2fproposal_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_peer_2fproposal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::SignedProposal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::SignedProposal, proposal_bytes_),
  PROTOBUF_FIELD_OFFSET(::protos::SignedProposal, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::Proposal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::Proposal, header_),
  PROTOBUF_FIELD_OFFSET(::protos::Proposal, payload_),
  PROTOBUF_FIELD_OFFSET(::protos::Proposal, extension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeHeaderExtension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeHeaderExtension, payload_visibility_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeHeaderExtension, chaincode_id_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload, input_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeProposalPayload, transientmap_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeAction, results_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeAction, events_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeAction, response_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeAction, chaincode_id_),
  PROTOBUF_FIELD_OFFSET(::protos::ChaincodeAction, token_expectation_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::SignedProposal)},
  { 7, -1, sizeof(::protos::Proposal)},
  { 15, -1, sizeof(::protos::ChaincodeHeaderExtension)},
  { 22, 29, sizeof(::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse)},
  { 31, -1, sizeof(::protos::ChaincodeProposalPayload)},
  { 38, -1, sizeof(::protos::ChaincodeAction)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_SignedProposal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_Proposal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeHeaderExtension_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeProposalPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_ChaincodeAction_default_instance_),
};

const char descriptor_table_protodef_peer_2fproposal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023peer/proposal.proto\022\006protos\032\024peer/chai"
  "ncode.proto\032\034peer/proposal_response.prot"
  "o\032\030token/expectations.proto\";\n\016SignedPro"
  "posal\022\026\n\016proposal_bytes\030\001 \001(\014\022\021\n\tsignatu"
  "re\030\002 \001(\014\">\n\010Proposal\022\016\n\006header\030\001 \001(\014\022\017\n\007"
  "payload\030\002 \001(\014\022\021\n\textension\030\003 \001(\014\"a\n\030Chai"
  "ncodeHeaderExtension\022\032\n\022payload_visibili"
  "ty\030\001 \001(\014\022)\n\014chaincode_id\030\002 \001(\0132\023.protos."
  "ChaincodeID\"\250\001\n\030ChaincodeProposalPayload"
  "\022\r\n\005input\030\001 \001(\014\022H\n\014TransientMap\030\002 \003(\01322."
  "protos.ChaincodeProposalPayload.Transien"
  "tMapEntry\0323\n\021TransientMapEntry\022\013\n\003key\030\001 "
  "\001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\266\001\n\017ChaincodeActi"
  "on\022\017\n\007results\030\001 \001(\014\022\016\n\006events\030\002 \001(\014\022\"\n\010r"
  "esponse\030\003 \001(\0132\020.protos.Response\022)\n\014chain"
  "code_id\030\004 \001(\0132\023.protos.ChaincodeID\0223\n\021to"
  "ken_expectation\030\005 \001(\0132\030.protos.TokenExpe"
  "ctationB`\n\"org.hyperledger.fabric.protos"
  ".peerB\017ProposalPackageZ)github.com/hyper"
  "ledger/fabric/protos/peerb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_peer_2fproposal_2eproto_deps[3] = {
  &::descriptor_table_peer_2fchaincode_2eproto,
  &::descriptor_table_peer_2fproposal_5fresponse_2eproto,
  &::descriptor_table_token_2fexpectations_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_peer_2fproposal_2eproto_sccs[6] = {
  &scc_info_ChaincodeAction_peer_2fproposal_2eproto.base,
  &scc_info_ChaincodeHeaderExtension_peer_2fproposal_2eproto.base,
  &scc_info_ChaincodeProposalPayload_peer_2fproposal_2eproto.base,
  &scc_info_ChaincodeProposalPayload_TransientMapEntry_DoNotUse_peer_2fproposal_2eproto.base,
  &scc_info_Proposal_peer_2fproposal_2eproto.base,
  &scc_info_SignedProposal_peer_2fproposal_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_peer_2fproposal_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_peer_2fproposal_2eproto = {
  false, false, descriptor_table_protodef_peer_2fproposal_2eproto, "peer/proposal.proto", 793,
  &descriptor_table_peer_2fproposal_2eproto_once, descriptor_table_peer_2fproposal_2eproto_sccs, descriptor_table_peer_2fproposal_2eproto_deps, 6, 3,
  schemas, file_default_instances, TableStruct_peer_2fproposal_2eproto::offsets,
  file_level_metadata_peer_2fproposal_2eproto, 6, file_level_enum_descriptors_peer_2fproposal_2eproto, file_level_service_descriptors_peer_2fproposal_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_peer_2fproposal_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_peer_2fproposal_2eproto)), true);
namespace protos {

// ===================================================================

void SignedProposal::InitAsDefaultInstance() {
}
class SignedProposal::_Internal {
 public:
};

SignedProposal::SignedProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.SignedProposal)
}
SignedProposal::SignedProposal(const SignedProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proposal_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proposal_bytes().empty()) {
    proposal_bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_proposal_bytes(),
      GetArena());
  }
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_signature().empty()) {
    signature_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_signature(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.SignedProposal)
}

void SignedProposal::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SignedProposal_peer_2fproposal_2eproto.base);
  proposal_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SignedProposal::~SignedProposal() {
  // @@protoc_insertion_point(destructor:protos.SignedProposal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SignedProposal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  proposal_bytes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SignedProposal::ArenaDtor(void* object) {
  SignedProposal* _this = reinterpret_cast< SignedProposal* >(object);
  (void)_this;
}
void SignedProposal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SignedProposal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SignedProposal& SignedProposal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SignedProposal_peer_2fproposal_2eproto.base);
  return *internal_default_instance();
}


void SignedProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.SignedProposal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proposal_bytes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignedProposal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes proposal_bytes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_proposal_bytes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes signature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_signature();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SignedProposal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.SignedProposal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes proposal_bytes = 1;
  if (this->proposal_bytes().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_proposal_bytes(), target);
  }

  // bytes signature = 2;
  if (this->signature().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_signature(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.SignedProposal)
  return target;
}

size_t SignedProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.SignedProposal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes proposal_bytes = 1;
  if (this->proposal_bytes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_proposal_bytes());
  }

  // bytes signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_signature());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignedProposal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.SignedProposal)
  GOOGLE_DCHECK_NE(&from, this);
  const SignedProposal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SignedProposal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.SignedProposal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.SignedProposal)
    MergeFrom(*source);
  }
}

void SignedProposal::MergeFrom(const SignedProposal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.SignedProposal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proposal_bytes().size() > 0) {
    _internal_set_proposal_bytes(from._internal_proposal_bytes());
  }
  if (from.signature().size() > 0) {
    _internal_set_signature(from._internal_signature());
  }
}

void SignedProposal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.SignedProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignedProposal::CopyFrom(const SignedProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.SignedProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignedProposal::IsInitialized() const {
  return true;
}

void SignedProposal::InternalSwap(SignedProposal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  proposal_bytes_.Swap(&other->proposal_bytes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  signature_.Swap(&other->signature_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SignedProposal::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Proposal::InitAsDefaultInstance() {
}
class Proposal::_Internal {
 public:
};

Proposal::Proposal(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.Proposal)
}
Proposal::Proposal(const Proposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_header().empty()) {
    header_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_header(),
      GetArena());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload(),
      GetArena());
  }
  extension_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_extension().empty()) {
    extension_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_extension(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.Proposal)
}

void Proposal::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Proposal_peer_2fproposal_2eproto.base);
  header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extension_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Proposal::~Proposal() {
  // @@protoc_insertion_point(destructor:protos.Proposal)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Proposal::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  header_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extension_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Proposal::ArenaDtor(void* object) {
  Proposal* _this = reinterpret_cast< Proposal* >(object);
  (void)_this;
}
void Proposal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Proposal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Proposal& Proposal::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Proposal_peer_2fproposal_2eproto.base);
  return *internal_default_instance();
}


void Proposal::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.Proposal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  header_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  extension_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Proposal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_header();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes extension = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_extension();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Proposal::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.Proposal)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes header = 1;
  if (this->header().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_header(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  // bytes extension = 3;
  if (this->extension().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_extension(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.Proposal)
  return target;
}

size_t Proposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.Proposal)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes header = 1;
  if (this->header().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_header());
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // bytes extension = 3;
  if (this->extension().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_extension());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proposal::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.Proposal)
  GOOGLE_DCHECK_NE(&from, this);
  const Proposal* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Proposal>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.Proposal)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.Proposal)
    MergeFrom(*source);
  }
}

void Proposal::MergeFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.Proposal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.header().size() > 0) {
    _internal_set_header(from._internal_header());
  }
  if (from.payload().size() > 0) {
    _internal_set_payload(from._internal_payload());
  }
  if (from.extension().size() > 0) {
    _internal_set_extension(from._internal_extension());
  }
}

void Proposal::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proposal::CopyFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proposal::IsInitialized() const {
  return true;
}

void Proposal::InternalSwap(Proposal* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  header_.Swap(&other->header_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  extension_.Swap(&other->extension_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Proposal::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChaincodeHeaderExtension::InitAsDefaultInstance() {
  ::protos::_ChaincodeHeaderExtension_default_instance_._instance.get_mutable()->chaincode_id_ = const_cast< ::protos::ChaincodeID*>(
      ::protos::ChaincodeID::internal_default_instance());
}
class ChaincodeHeaderExtension::_Internal {
 public:
  static const ::protos::ChaincodeID& chaincode_id(const ChaincodeHeaderExtension* msg);
};

const ::protos::ChaincodeID&
ChaincodeHeaderExtension::_Internal::chaincode_id(const ChaincodeHeaderExtension* msg) {
  return *msg->chaincode_id_;
}
void ChaincodeHeaderExtension::clear_chaincode_id() {
  if (GetArena() == nullptr && chaincode_id_ != nullptr) {
    delete chaincode_id_;
  }
  chaincode_id_ = nullptr;
}
ChaincodeHeaderExtension::ChaincodeHeaderExtension(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeHeaderExtension)
}
ChaincodeHeaderExtension::ChaincodeHeaderExtension(const ChaincodeHeaderExtension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_visibility_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload_visibility().empty()) {
    payload_visibility_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload_visibility(),
      GetArena());
  }
  if (from._internal_has_chaincode_id()) {
    chaincode_id_ = new ::protos::ChaincodeID(*from.chaincode_id_);
  } else {
    chaincode_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeHeaderExtension)
}

void ChaincodeHeaderExtension::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeHeaderExtension_peer_2fproposal_2eproto.base);
  payload_visibility_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chaincode_id_ = nullptr;
}

ChaincodeHeaderExtension::~ChaincodeHeaderExtension() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeHeaderExtension)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeHeaderExtension::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_visibility_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete chaincode_id_;
}

void ChaincodeHeaderExtension::ArenaDtor(void* object) {
  ChaincodeHeaderExtension* _this = reinterpret_cast< ChaincodeHeaderExtension* >(object);
  (void)_this;
}
void ChaincodeHeaderExtension::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeHeaderExtension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeHeaderExtension& ChaincodeHeaderExtension::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeHeaderExtension_peer_2fproposal_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeHeaderExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeHeaderExtension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_visibility_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && chaincode_id_ != nullptr) {
    delete chaincode_id_;
  }
  chaincode_id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeHeaderExtension::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes payload_visibility = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_payload_visibility();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.ChaincodeID chaincode_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chaincode_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeHeaderExtension::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeHeaderExtension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payload_visibility = 1;
  if (this->payload_visibility().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_payload_visibility(), target);
  }

  // .protos.ChaincodeID chaincode_id = 2;
  if (this->has_chaincode_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chaincode_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeHeaderExtension)
  return target;
}

size_t ChaincodeHeaderExtension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeHeaderExtension)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload_visibility = 1;
  if (this->payload_visibility().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload_visibility());
  }

  // .protos.ChaincodeID chaincode_id = 2;
  if (this->has_chaincode_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chaincode_id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeHeaderExtension::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeHeaderExtension)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeHeaderExtension* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeHeaderExtension>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeHeaderExtension)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeHeaderExtension)
    MergeFrom(*source);
  }
}

void ChaincodeHeaderExtension::MergeFrom(const ChaincodeHeaderExtension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeHeaderExtension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload_visibility().size() > 0) {
    _internal_set_payload_visibility(from._internal_payload_visibility());
  }
  if (from.has_chaincode_id()) {
    _internal_mutable_chaincode_id()->::protos::ChaincodeID::MergeFrom(from._internal_chaincode_id());
  }
}

void ChaincodeHeaderExtension::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeHeaderExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeHeaderExtension::CopyFrom(const ChaincodeHeaderExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeHeaderExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeHeaderExtension::IsInitialized() const {
  return true;
}

void ChaincodeHeaderExtension::InternalSwap(ChaincodeHeaderExtension* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_visibility_.Swap(&other->payload_visibility_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(chaincode_id_, other->chaincode_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeHeaderExtension::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ChaincodeProposalPayload_TransientMapEntry_DoNotUse::ChaincodeProposalPayload_TransientMapEntry_DoNotUse() {}
ChaincodeProposalPayload_TransientMapEntry_DoNotUse::ChaincodeProposalPayload_TransientMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ChaincodeProposalPayload_TransientMapEntry_DoNotUse::MergeFrom(const ChaincodeProposalPayload_TransientMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeProposalPayload_TransientMapEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ChaincodeProposalPayload_TransientMapEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ChaincodeProposalPayload::InitAsDefaultInstance() {
}
class ChaincodeProposalPayload::_Internal {
 public:
};

ChaincodeProposalPayload::ChaincodeProposalPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  transientmap_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeProposalPayload)
}
ChaincodeProposalPayload::ChaincodeProposalPayload(const ChaincodeProposalPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  transientmap_.MergeFrom(from.transientmap_);
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_input().empty()) {
    input_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_input(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeProposalPayload)
}

void ChaincodeProposalPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeProposalPayload_peer_2fproposal_2eproto.base);
  input_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ChaincodeProposalPayload::~ChaincodeProposalPayload() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeProposalPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeProposalPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  input_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ChaincodeProposalPayload::ArenaDtor(void* object) {
  ChaincodeProposalPayload* _this = reinterpret_cast< ChaincodeProposalPayload* >(object);
  (void)_this;
}
void ChaincodeProposalPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeProposalPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeProposalPayload& ChaincodeProposalPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeProposalPayload_peer_2fproposal_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeProposalPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeProposalPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transientmap_.Clear();
  input_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeProposalPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes input = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_input();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, bytes> TransientMap = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&transientmap_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeProposalPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeProposalPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes input = 1;
  if (this->input().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_input(), target);
  }

  // map<string, bytes> TransientMap = 2;
  if (!this->_internal_transientmap().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "protos.ChaincodeProposalPayload.TransientMapEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_transientmap().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_transientmap().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_transientmap().begin();
          it != this->_internal_transientmap().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ChaincodeProposalPayload_TransientMapEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_transientmap().begin();
          it != this->_internal_transientmap().end(); ++it) {
        target = ChaincodeProposalPayload_TransientMapEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeProposalPayload)
  return target;
}

size_t ChaincodeProposalPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeProposalPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bytes> TransientMap = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_transientmap_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_transientmap().begin();
      it != this->_internal_transientmap().end(); ++it) {
    total_size += ChaincodeProposalPayload_TransientMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // bytes input = 1;
  if (this->input().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_input());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeProposalPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeProposalPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeProposalPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeProposalPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeProposalPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeProposalPayload)
    MergeFrom(*source);
  }
}

void ChaincodeProposalPayload::MergeFrom(const ChaincodeProposalPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeProposalPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transientmap_.MergeFrom(from.transientmap_);
  if (from.input().size() > 0) {
    _internal_set_input(from._internal_input());
  }
}

void ChaincodeProposalPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeProposalPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeProposalPayload::CopyFrom(const ChaincodeProposalPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeProposalPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeProposalPayload::IsInitialized() const {
  return true;
}

void ChaincodeProposalPayload::InternalSwap(ChaincodeProposalPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  transientmap_.Swap(&other->transientmap_);
  input_.Swap(&other->input_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeProposalPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChaincodeAction::InitAsDefaultInstance() {
  ::protos::_ChaincodeAction_default_instance_._instance.get_mutable()->response_ = const_cast< ::protos::Response*>(
      ::protos::Response::internal_default_instance());
  ::protos::_ChaincodeAction_default_instance_._instance.get_mutable()->chaincode_id_ = const_cast< ::protos::ChaincodeID*>(
      ::protos::ChaincodeID::internal_default_instance());
  ::protos::_ChaincodeAction_default_instance_._instance.get_mutable()->token_expectation_ = const_cast< ::protos::TokenExpectation*>(
      ::protos::TokenExpectation::internal_default_instance());
}
class ChaincodeAction::_Internal {
 public:
  static const ::protos::Response& response(const ChaincodeAction* msg);
  static const ::protos::ChaincodeID& chaincode_id(const ChaincodeAction* msg);
  static const ::protos::TokenExpectation& token_expectation(const ChaincodeAction* msg);
};

const ::protos::Response&
ChaincodeAction::_Internal::response(const ChaincodeAction* msg) {
  return *msg->response_;
}
const ::protos::ChaincodeID&
ChaincodeAction::_Internal::chaincode_id(const ChaincodeAction* msg) {
  return *msg->chaincode_id_;
}
const ::protos::TokenExpectation&
ChaincodeAction::_Internal::token_expectation(const ChaincodeAction* msg) {
  return *msg->token_expectation_;
}
void ChaincodeAction::clear_response() {
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
}
void ChaincodeAction::clear_chaincode_id() {
  if (GetArena() == nullptr && chaincode_id_ != nullptr) {
    delete chaincode_id_;
  }
  chaincode_id_ = nullptr;
}
void ChaincodeAction::clear_token_expectation() {
  if (GetArena() == nullptr && token_expectation_ != nullptr) {
    delete token_expectation_;
  }
  token_expectation_ = nullptr;
}
ChaincodeAction::ChaincodeAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.ChaincodeAction)
}
ChaincodeAction::ChaincodeAction(const ChaincodeAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  results_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_results().empty()) {
    results_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_results(),
      GetArena());
  }
  events_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_events().empty()) {
    events_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_events(),
      GetArena());
  }
  if (from._internal_has_response()) {
    response_ = new ::protos::Response(*from.response_);
  } else {
    response_ = nullptr;
  }
  if (from._internal_has_chaincode_id()) {
    chaincode_id_ = new ::protos::ChaincodeID(*from.chaincode_id_);
  } else {
    chaincode_id_ = nullptr;
  }
  if (from._internal_has_token_expectation()) {
    token_expectation_ = new ::protos::TokenExpectation(*from.token_expectation_);
  } else {
    token_expectation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protos.ChaincodeAction)
}

void ChaincodeAction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChaincodeAction_peer_2fproposal_2eproto.base);
  results_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  events_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&response_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_expectation_) -
      reinterpret_cast<char*>(&response_)) + sizeof(token_expectation_));
}

ChaincodeAction::~ChaincodeAction() {
  // @@protoc_insertion_point(destructor:protos.ChaincodeAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChaincodeAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  results_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  events_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete response_;
  if (this != internal_default_instance()) delete chaincode_id_;
  if (this != internal_default_instance()) delete token_expectation_;
}

void ChaincodeAction::ArenaDtor(void* object) {
  ChaincodeAction* _this = reinterpret_cast< ChaincodeAction* >(object);
  (void)_this;
}
void ChaincodeAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChaincodeAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChaincodeAction& ChaincodeAction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChaincodeAction_peer_2fproposal_2eproto.base);
  return *internal_default_instance();
}


void ChaincodeAction::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.ChaincodeAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  events_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && response_ != nullptr) {
    delete response_;
  }
  response_ = nullptr;
  if (GetArena() == nullptr && chaincode_id_ != nullptr) {
    delete chaincode_id_;
  }
  chaincode_id_ = nullptr;
  if (GetArena() == nullptr && token_expectation_ != nullptr) {
    delete token_expectation_;
  }
  token_expectation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChaincodeAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes results = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_results();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes events = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_events();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.Response response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.ChaincodeID chaincode_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_chaincode_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.TokenExpectation token_expectation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_token_expectation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChaincodeAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.ChaincodeAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes results = 1;
  if (this->results().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_results(), target);
  }

  // bytes events = 2;
  if (this->events().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_events(), target);
  }

  // .protos.Response response = 3;
  if (this->has_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::response(this), target, stream);
  }

  // .protos.ChaincodeID chaincode_id = 4;
  if (this->has_chaincode_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::chaincode_id(this), target, stream);
  }

  // .protos.TokenExpectation token_expectation = 5;
  if (this->has_token_expectation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::token_expectation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.ChaincodeAction)
  return target;
}

size_t ChaincodeAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.ChaincodeAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes results = 1;
  if (this->results().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_results());
  }

  // bytes events = 2;
  if (this->events().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_events());
  }

  // .protos.Response response = 3;
  if (this->has_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // .protos.ChaincodeID chaincode_id = 4;
  if (this->has_chaincode_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *chaincode_id_);
  }

  // .protos.TokenExpectation token_expectation = 5;
  if (this->has_token_expectation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_expectation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChaincodeAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.ChaincodeAction)
  GOOGLE_DCHECK_NE(&from, this);
  const ChaincodeAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChaincodeAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.ChaincodeAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.ChaincodeAction)
    MergeFrom(*source);
  }
}

void ChaincodeAction::MergeFrom(const ChaincodeAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.ChaincodeAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.results().size() > 0) {
    _internal_set_results(from._internal_results());
  }
  if (from.events().size() > 0) {
    _internal_set_events(from._internal_events());
  }
  if (from.has_response()) {
    _internal_mutable_response()->::protos::Response::MergeFrom(from._internal_response());
  }
  if (from.has_chaincode_id()) {
    _internal_mutable_chaincode_id()->::protos::ChaincodeID::MergeFrom(from._internal_chaincode_id());
  }
  if (from.has_token_expectation()) {
    _internal_mutable_token_expectation()->::protos::TokenExpectation::MergeFrom(from._internal_token_expectation());
  }
}

void ChaincodeAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.ChaincodeAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChaincodeAction::CopyFrom(const ChaincodeAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.ChaincodeAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChaincodeAction::IsInitialized() const {
  return true;
}

void ChaincodeAction::InternalSwap(ChaincodeAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.Swap(&other->results_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  events_.Swap(&other->events_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChaincodeAction, token_expectation_)
      + sizeof(ChaincodeAction::token_expectation_)
      - PROTOBUF_FIELD_OFFSET(ChaincodeAction, response_)>(
          reinterpret_cast<char*>(&response_),
          reinterpret_cast<char*>(&other->response_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChaincodeAction::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protos::SignedProposal* Arena::CreateMaybeMessage< ::protos::SignedProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::SignedProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::Proposal* Arena::CreateMaybeMessage< ::protos::Proposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::Proposal >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeHeaderExtension* Arena::CreateMaybeMessage< ::protos::ChaincodeHeaderExtension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeHeaderExtension >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeProposalPayload_TransientMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeProposalPayload* Arena::CreateMaybeMessage< ::protos::ChaincodeProposalPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeProposalPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::ChaincodeAction* Arena::CreateMaybeMessage< ::protos::ChaincodeAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::ChaincodeAction >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
