// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: token/expectations.proto

#include "token/expectations.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_token_2ftransaction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlainOutput_token_2ftransaction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_token_2fexpectations_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlainExpectation_token_2fexpectations_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_token_2fexpectations_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlainTokenExpectation_token_2fexpectations_2eproto;
namespace protos {
class TokenExpectationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TokenExpectation> _instance;
  const ::protos::PlainExpectation* plain_expectation_;
} _TokenExpectation_default_instance_;
class PlainExpectationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlainExpectation> _instance;
  const ::protos::PlainTokenExpectation* import_expectation_;
  const ::protos::PlainTokenExpectation* transfer_expectation_;
} _PlainExpectation_default_instance_;
class PlainTokenExpectationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlainTokenExpectation> _instance;
} _PlainTokenExpectation_default_instance_;
}  // namespace protos
static void InitDefaultsscc_info_PlainExpectation_token_2fexpectations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_PlainExpectation_default_instance_;
    new (ptr) ::protos::PlainExpectation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::PlainExpectation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlainExpectation_token_2fexpectations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlainExpectation_token_2fexpectations_2eproto}, {
      &scc_info_PlainTokenExpectation_token_2fexpectations_2eproto.base,}};

static void InitDefaultsscc_info_PlainTokenExpectation_token_2fexpectations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_PlainTokenExpectation_default_instance_;
    new (ptr) ::protos::PlainTokenExpectation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::PlainTokenExpectation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlainTokenExpectation_token_2fexpectations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlainTokenExpectation_token_2fexpectations_2eproto}, {
      &scc_info_PlainOutput_token_2ftransaction_2eproto.base,}};

static void InitDefaultsscc_info_TokenExpectation_token_2fexpectations_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protos::_TokenExpectation_default_instance_;
    new (ptr) ::protos::TokenExpectation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protos::TokenExpectation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TokenExpectation_token_2fexpectations_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TokenExpectation_token_2fexpectations_2eproto}, {
      &scc_info_PlainExpectation_token_2fexpectations_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_token_2fexpectations_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_token_2fexpectations_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_token_2fexpectations_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_token_2fexpectations_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::TokenExpectation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protos::TokenExpectation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::protos::TokenExpectationDefaultTypeInternal, plain_expectation_),
  PROTOBUF_FIELD_OFFSET(::protos::TokenExpectation, Expectation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::PlainExpectation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::protos::PlainExpectation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::protos::PlainExpectationDefaultTypeInternal, import_expectation_),
  offsetof(::protos::PlainExpectationDefaultTypeInternal, transfer_expectation_),
  PROTOBUF_FIELD_OFFSET(::protos::PlainExpectation, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::protos::PlainTokenExpectation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protos::PlainTokenExpectation, outputs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protos::TokenExpectation)},
  { 7, -1, sizeof(::protos::PlainExpectation)},
  { 15, -1, sizeof(::protos::PlainTokenExpectation)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_TokenExpectation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_PlainExpectation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protos::_PlainTokenExpectation_default_instance_),
};

const char descriptor_table_protodef_token_2fexpectations_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030token/expectations.proto\022\006protos\032\037goog"
  "le/protobuf/timestamp.proto\032\027token/trans"
  "action.proto\"X\n\020TokenExpectation\0225\n\021plai"
  "n_expectation\030\001 \001(\0132\030.protos.PlainExpect"
  "ationH\000B\r\n\013Expectation\"\231\001\n\020PlainExpectat"
  "ion\022;\n\022import_expectation\030\001 \001(\0132\035.protos"
  ".PlainTokenExpectationH\000\022=\n\024transfer_exp"
  "ectation\030\002 \001(\0132\035.protos.PlainTokenExpect"
  "ationH\000B\t\n\007payload\"6\n\025PlainTokenExpectat"
  "ion\022\035\n\007outputs\030\001 \003(\0132\014.PlainOutputBQ\n#or"
  "g.hyperledger.fabric.protos.tokenZ*githu"
  "b.com/hyperledger/fabric/protos/tokenb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_token_2fexpectations_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_token_2ftransaction_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_token_2fexpectations_2eproto_sccs[3] = {
  &scc_info_PlainExpectation_token_2fexpectations_2eproto.base,
  &scc_info_PlainTokenExpectation_token_2fexpectations_2eproto.base,
  &scc_info_TokenExpectation_token_2fexpectations_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_token_2fexpectations_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_token_2fexpectations_2eproto = {
  false, false, descriptor_table_protodef_token_2fexpectations_2eproto, "token/expectations.proto", 485,
  &descriptor_table_token_2fexpectations_2eproto_once, descriptor_table_token_2fexpectations_2eproto_sccs, descriptor_table_token_2fexpectations_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_token_2fexpectations_2eproto::offsets,
  file_level_metadata_token_2fexpectations_2eproto, 3, file_level_enum_descriptors_token_2fexpectations_2eproto, file_level_service_descriptors_token_2fexpectations_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_token_2fexpectations_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_token_2fexpectations_2eproto)), true);
namespace protos {

// ===================================================================

void TokenExpectation::InitAsDefaultInstance() {
  ::protos::_TokenExpectation_default_instance_.plain_expectation_ = const_cast< ::protos::PlainExpectation*>(
      ::protos::PlainExpectation::internal_default_instance());
}
class TokenExpectation::_Internal {
 public:
  static const ::protos::PlainExpectation& plain_expectation(const TokenExpectation* msg);
};

const ::protos::PlainExpectation&
TokenExpectation::_Internal::plain_expectation(const TokenExpectation* msg) {
  return *msg->Expectation_.plain_expectation_;
}
void TokenExpectation::set_allocated_plain_expectation(::protos::PlainExpectation* plain_expectation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_Expectation();
  if (plain_expectation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(plain_expectation);
    if (message_arena != submessage_arena) {
      plain_expectation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, plain_expectation, submessage_arena);
    }
    set_has_plain_expectation();
    Expectation_.plain_expectation_ = plain_expectation;
  }
  // @@protoc_insertion_point(field_set_allocated:protos.TokenExpectation.plain_expectation)
}
TokenExpectation::TokenExpectation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.TokenExpectation)
}
TokenExpectation::TokenExpectation(const TokenExpectation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Expectation();
  switch (from.Expectation_case()) {
    case kPlainExpectation: {
      _internal_mutable_plain_expectation()->::protos::PlainExpectation::MergeFrom(from._internal_plain_expectation());
      break;
    }
    case EXPECTATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protos.TokenExpectation)
}

void TokenExpectation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TokenExpectation_token_2fexpectations_2eproto.base);
  clear_has_Expectation();
}

TokenExpectation::~TokenExpectation() {
  // @@protoc_insertion_point(destructor:protos.TokenExpectation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TokenExpectation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_Expectation()) {
    clear_Expectation();
  }
}

void TokenExpectation::ArenaDtor(void* object) {
  TokenExpectation* _this = reinterpret_cast< TokenExpectation* >(object);
  (void)_this;
}
void TokenExpectation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TokenExpectation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TokenExpectation& TokenExpectation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TokenExpectation_token_2fexpectations_2eproto.base);
  return *internal_default_instance();
}


void TokenExpectation::clear_Expectation() {
// @@protoc_insertion_point(one_of_clear_start:protos.TokenExpectation)
  switch (Expectation_case()) {
    case kPlainExpectation: {
      if (GetArena() == nullptr) {
        delete Expectation_.plain_expectation_;
      }
      break;
    }
    case EXPECTATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPECTATION_NOT_SET;
}


void TokenExpectation::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.TokenExpectation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Expectation();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TokenExpectation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protos.PlainExpectation plain_expectation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_plain_expectation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TokenExpectation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.TokenExpectation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.PlainExpectation plain_expectation = 1;
  if (_internal_has_plain_expectation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::plain_expectation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.TokenExpectation)
  return target;
}

size_t TokenExpectation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.TokenExpectation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Expectation_case()) {
    // .protos.PlainExpectation plain_expectation = 1;
    case kPlainExpectation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Expectation_.plain_expectation_);
      break;
    }
    case EXPECTATION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenExpectation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.TokenExpectation)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenExpectation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TokenExpectation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.TokenExpectation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.TokenExpectation)
    MergeFrom(*source);
  }
}

void TokenExpectation::MergeFrom(const TokenExpectation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.TokenExpectation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Expectation_case()) {
    case kPlainExpectation: {
      _internal_mutable_plain_expectation()->::protos::PlainExpectation::MergeFrom(from._internal_plain_expectation());
      break;
    }
    case EXPECTATION_NOT_SET: {
      break;
    }
  }
}

void TokenExpectation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.TokenExpectation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenExpectation::CopyFrom(const TokenExpectation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.TokenExpectation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenExpectation::IsInitialized() const {
  return true;
}

void TokenExpectation::InternalSwap(TokenExpectation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(Expectation_, other->Expectation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata TokenExpectation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlainExpectation::InitAsDefaultInstance() {
  ::protos::_PlainExpectation_default_instance_.import_expectation_ = const_cast< ::protos::PlainTokenExpectation*>(
      ::protos::PlainTokenExpectation::internal_default_instance());
  ::protos::_PlainExpectation_default_instance_.transfer_expectation_ = const_cast< ::protos::PlainTokenExpectation*>(
      ::protos::PlainTokenExpectation::internal_default_instance());
}
class PlainExpectation::_Internal {
 public:
  static const ::protos::PlainTokenExpectation& import_expectation(const PlainExpectation* msg);
  static const ::protos::PlainTokenExpectation& transfer_expectation(const PlainExpectation* msg);
};

const ::protos::PlainTokenExpectation&
PlainExpectation::_Internal::import_expectation(const PlainExpectation* msg) {
  return *msg->payload_.import_expectation_;
}
const ::protos::PlainTokenExpectation&
PlainExpectation::_Internal::transfer_expectation(const PlainExpectation* msg) {
  return *msg->payload_.transfer_expectation_;
}
void PlainExpectation::set_allocated_import_expectation(::protos::PlainTokenExpectation* import_expectation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (import_expectation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(import_expectation);
    if (message_arena != submessage_arena) {
      import_expectation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, import_expectation, submessage_arena);
    }
    set_has_import_expectation();
    payload_.import_expectation_ = import_expectation;
  }
  // @@protoc_insertion_point(field_set_allocated:protos.PlainExpectation.import_expectation)
}
void PlainExpectation::set_allocated_transfer_expectation(::protos::PlainTokenExpectation* transfer_expectation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (transfer_expectation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(transfer_expectation);
    if (message_arena != submessage_arena) {
      transfer_expectation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transfer_expectation, submessage_arena);
    }
    set_has_transfer_expectation();
    payload_.transfer_expectation_ = transfer_expectation;
  }
  // @@protoc_insertion_point(field_set_allocated:protos.PlainExpectation.transfer_expectation)
}
PlainExpectation::PlainExpectation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.PlainExpectation)
}
PlainExpectation::PlainExpectation(const PlainExpectation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kImportExpectation: {
      _internal_mutable_import_expectation()->::protos::PlainTokenExpectation::MergeFrom(from._internal_import_expectation());
      break;
    }
    case kTransferExpectation: {
      _internal_mutable_transfer_expectation()->::protos::PlainTokenExpectation::MergeFrom(from._internal_transfer_expectation());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:protos.PlainExpectation)
}

void PlainExpectation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlainExpectation_token_2fexpectations_2eproto.base);
  clear_has_payload();
}

PlainExpectation::~PlainExpectation() {
  // @@protoc_insertion_point(destructor:protos.PlainExpectation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlainExpectation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_payload()) {
    clear_payload();
  }
}

void PlainExpectation::ArenaDtor(void* object) {
  PlainExpectation* _this = reinterpret_cast< PlainExpectation* >(object);
  (void)_this;
}
void PlainExpectation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlainExpectation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlainExpectation& PlainExpectation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlainExpectation_token_2fexpectations_2eproto.base);
  return *internal_default_instance();
}


void PlainExpectation::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:protos.PlainExpectation)
  switch (payload_case()) {
    case kImportExpectation: {
      if (GetArena() == nullptr) {
        delete payload_.import_expectation_;
      }
      break;
    }
    case kTransferExpectation: {
      if (GetArena() == nullptr) {
        delete payload_.transfer_expectation_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void PlainExpectation::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.PlainExpectation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlainExpectation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .protos.PlainTokenExpectation import_expectation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_import_expectation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .protos.PlainTokenExpectation transfer_expectation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_transfer_expectation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlainExpectation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.PlainExpectation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .protos.PlainTokenExpectation import_expectation = 1;
  if (_internal_has_import_expectation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::import_expectation(this), target, stream);
  }

  // .protos.PlainTokenExpectation transfer_expectation = 2;
  if (_internal_has_transfer_expectation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::transfer_expectation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.PlainExpectation)
  return target;
}

size_t PlainExpectation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.PlainExpectation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (payload_case()) {
    // .protos.PlainTokenExpectation import_expectation = 1;
    case kImportExpectation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.import_expectation_);
      break;
    }
    // .protos.PlainTokenExpectation transfer_expectation = 2;
    case kTransferExpectation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.transfer_expectation_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlainExpectation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.PlainExpectation)
  GOOGLE_DCHECK_NE(&from, this);
  const PlainExpectation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlainExpectation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.PlainExpectation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.PlainExpectation)
    MergeFrom(*source);
  }
}

void PlainExpectation::MergeFrom(const PlainExpectation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.PlainExpectation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kImportExpectation: {
      _internal_mutable_import_expectation()->::protos::PlainTokenExpectation::MergeFrom(from._internal_import_expectation());
      break;
    }
    case kTransferExpectation: {
      _internal_mutable_transfer_expectation()->::protos::PlainTokenExpectation::MergeFrom(from._internal_transfer_expectation());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void PlainExpectation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.PlainExpectation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlainExpectation::CopyFrom(const PlainExpectation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.PlainExpectation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlainExpectation::IsInitialized() const {
  return true;
}

void PlainExpectation::InternalSwap(PlainExpectation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlainExpectation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlainTokenExpectation::InitAsDefaultInstance() {
}
class PlainTokenExpectation::_Internal {
 public:
};

void PlainTokenExpectation::clear_outputs() {
  outputs_.Clear();
}
PlainTokenExpectation::PlainTokenExpectation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  outputs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protos.PlainTokenExpectation)
}
PlainTokenExpectation::PlainTokenExpectation(const PlainTokenExpectation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protos.PlainTokenExpectation)
}

void PlainTokenExpectation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlainTokenExpectation_token_2fexpectations_2eproto.base);
}

PlainTokenExpectation::~PlainTokenExpectation() {
  // @@protoc_insertion_point(destructor:protos.PlainTokenExpectation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlainTokenExpectation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PlainTokenExpectation::ArenaDtor(void* object) {
  PlainTokenExpectation* _this = reinterpret_cast< PlainTokenExpectation* >(object);
  (void)_this;
}
void PlainTokenExpectation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlainTokenExpectation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlainTokenExpectation& PlainTokenExpectation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlainTokenExpectation_token_2fexpectations_2eproto.base);
  return *internal_default_instance();
}


void PlainTokenExpectation::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.PlainTokenExpectation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlainTokenExpectation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .PlainOutput outputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlainTokenExpectation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.PlainTokenExpectation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PlainOutput outputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_outputs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protos.PlainTokenExpectation)
  return target;
}

size_t PlainTokenExpectation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protos.PlainTokenExpectation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PlainOutput outputs = 1;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlainTokenExpectation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.PlainTokenExpectation)
  GOOGLE_DCHECK_NE(&from, this);
  const PlainTokenExpectation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlainTokenExpectation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.PlainTokenExpectation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.PlainTokenExpectation)
    MergeFrom(*source);
  }
}

void PlainTokenExpectation::MergeFrom(const PlainTokenExpectation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.PlainTokenExpectation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
}

void PlainTokenExpectation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.PlainTokenExpectation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlainTokenExpectation::CopyFrom(const PlainTokenExpectation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.PlainTokenExpectation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlainTokenExpectation::IsInitialized() const {
  return true;
}

void PlainTokenExpectation::InternalSwap(PlainTokenExpectation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  outputs_.InternalSwap(&other->outputs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlainTokenExpectation::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protos::TokenExpectation* Arena::CreateMaybeMessage< ::protos::TokenExpectation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::TokenExpectation >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::PlainExpectation* Arena::CreateMaybeMessage< ::protos::PlainExpectation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::PlainExpectation >(arena);
}
template<> PROTOBUF_NOINLINE ::protos::PlainTokenExpectation* Arena::CreateMaybeMessage< ::protos::PlainTokenExpectation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protos::PlainTokenExpectation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
