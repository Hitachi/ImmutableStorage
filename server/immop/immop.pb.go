// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.4
// source: proto/immop.proto

package immop

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Cert      []byte `protobuf:"bytes,2,opt,name=Cert,proto3" json:"Cert,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{0}
}

func (x *Credential) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Credential) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type CreateServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred  *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	MspID string      `protobuf:"bytes,2,opt,name=MspID,proto3" json:"MspID,omitempty"`
	Priv  []byte      `protobuf:"bytes,3,opt,name=Priv,proto3" json:"Priv,omitempty"`
	Cert  []byte      `protobuf:"bytes,4,opt,name=Cert,proto3" json:"Cert,omitempty"`
}

func (x *CreateServiceRequest) Reset() {
	*x = CreateServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateServiceRequest) ProtoMessage() {}

func (x *CreateServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateServiceRequest.ProtoReflect.Descriptor instead.
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{1}
}

func (x *CreateServiceRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *CreateServiceRequest) GetMspID() string {
	if x != nil {
		return x.MspID
	}
	return ""
}

func (x *CreateServiceRequest) GetPriv() []byte {
	if x != nil {
		return x.Priv
	}
	return nil
}

func (x *CreateServiceRequest) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotReadyF bool   `protobuf:"varint,1,opt,name=NotReadyF,proto3" json:"NotReadyF,omitempty"`
	TaskID    string `protobuf:"bytes,2,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
}

func (x *Reply) Reset() {
	*x = Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reply) ProtoMessage() {}

func (x *Reply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reply.ProtoReflect.Descriptor instead.
func (*Reply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{2}
}

func (x *Reply) GetNotReadyF() bool {
	if x != nil {
		return x.NotReadyF
	}
	return false
}

func (x *Reply) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

type ExportServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred     *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Hostname string      `protobuf:"bytes,2,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
}

func (x *ExportServiceRequest) Reset() {
	*x = ExportServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportServiceRequest) ProtoMessage() {}

func (x *ExportServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportServiceRequest.ProtoReflect.Descriptor instead.
func (*ExportServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{3}
}

func (x *ExportServiceRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *ExportServiceRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type ExportServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname  string `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Port      string `protobuf:"bytes,2,opt,name=Port,proto3" json:"Port,omitempty"`
	CACert    []byte `protobuf:"bytes,3,opt,name=CACert,proto3" json:"CACert,omitempty"`
	AdminCert []byte `protobuf:"bytes,4,opt,name=AdminCert,proto3" json:"AdminCert,omitempty"`
	TlsCACert []byte `protobuf:"bytes,5,opt,name=TlsCACert,proto3" json:"TlsCACert,omitempty"`
}

func (x *ExportServiceReply) Reset() {
	*x = ExportServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportServiceReply) ProtoMessage() {}

func (x *ExportServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportServiceReply.ProtoReflect.Descriptor instead.
func (*ExportServiceReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{4}
}

func (x *ExportServiceReply) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ExportServiceReply) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ExportServiceReply) GetCACert() []byte {
	if x != nil {
		return x.CACert
	}
	return nil
}

func (x *ExportServiceReply) GetAdminCert() []byte {
	if x != nil {
		return x.AdminCert
	}
	return nil
}

func (x *ExportServiceReply) GetTlsCACert() []byte {
	if x != nil {
		return x.TlsCACert
	}
	return nil
}

type ListServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
}

func (x *ListServiceRequest) Reset() {
	*x = ListServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceRequest) ProtoMessage() {}

func (x *ListServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceRequest.ProtoReflect.Descriptor instead.
func (*ListServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{5}
}

func (x *ListServiceRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

type ServiceAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Type     string `protobuf:"bytes,2,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *ServiceAttribute) Reset() {
	*x = ServiceAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAttribute) ProtoMessage() {}

func (x *ServiceAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAttribute.ProtoReflect.Descriptor instead.
func (*ServiceAttribute) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceAttribute) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ServiceAttribute) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ListServiceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service []*ServiceAttribute `protobuf:"bytes,1,rep,name=Service,proto3" json:"Service,omitempty"`
}

func (x *ListServiceReply) Reset() {
	*x = ListServiceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListServiceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServiceReply) ProtoMessage() {}

func (x *ListServiceReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServiceReply.ProtoReflect.Descriptor instead.
func (*ListServiceReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{7}
}

func (x *ListServiceReply) GetService() []*ServiceAttribute {
	if x != nil {
		return x.Service
	}
	return nil
}

type ImportServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred    *Credential         `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Service *ExportServiceReply `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
}

func (x *ImportServiceRequest) Reset() {
	*x = ImportServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportServiceRequest) ProtoMessage() {}

func (x *ImportServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportServiceRequest.ProtoReflect.Descriptor instead.
func (*ImportServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{8}
}

func (x *ImportServiceRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *ImportServiceRequest) GetService() *ExportServiceReply {
	if x != nil {
		return x.Service
	}
	return nil
}

type CreateChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred      *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	ChannelID string      `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
}

func (x *CreateChannelRequest) Reset() {
	*x = CreateChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannelRequest) ProtoMessage() {}

func (x *CreateChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannelRequest.ProtoReflect.Descriptor instead.
func (*CreateChannelRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{9}
}

func (x *CreateChannelRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *CreateChannelRequest) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type ListImportedServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
}

func (x *ListImportedServiceRequest) Reset() {
	*x = ListImportedServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImportedServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImportedServiceRequest) ProtoMessage() {}

func (x *ListImportedServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImportedServiceRequest.ProtoReflect.Descriptor instead.
func (*ListImportedServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{10}
}

func (x *ListImportedServiceRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

type ServiceSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Port     string `protobuf:"bytes,2,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *ServiceSummary) Reset() {
	*x = ServiceSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSummary) ProtoMessage() {}

func (x *ServiceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSummary.ProtoReflect.Descriptor instead.
func (*ServiceSummary) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{11}
}

func (x *ServiceSummary) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ServiceSummary) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type ListImportedServiceSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer []*ServiceSummary `protobuf:"bytes,1,rep,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *ListImportedServiceSummary) Reset() {
	*x = ListImportedServiceSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImportedServiceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImportedServiceSummary) ProtoMessage() {}

func (x *ListImportedServiceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImportedServiceSummary.ProtoReflect.Descriptor instead.
func (*ListImportedServiceSummary) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{12}
}

func (x *ListImportedServiceSummary) GetPeer() []*ServiceSummary {
	if x != nil {
		return x.Peer
	}
	return nil
}

type RemoveServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred *Credential     `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Peer *ServiceSummary `protobuf:"bytes,2,opt,name=Peer,proto3" json:"Peer,omitempty"`
}

func (x *RemoveServiceRequest) Reset() {
	*x = RemoveServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceRequest) ProtoMessage() {}

func (x *RemoveServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceRequest.ProtoReflect.Descriptor instead.
func (*RemoveServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveServiceRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *RemoveServiceRequest) GetPeer() *ServiceSummary {
	if x != nil {
		return x.Peer
	}
	return nil
}

type ListChannelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChName []string `protobuf:"bytes,1,rep,name=ChName,proto3" json:"ChName,omitempty"`
}

func (x *ListChannelReply) Reset() {
	*x = ListChannelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChannelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelReply) ProtoMessage() {}

func (x *ListChannelReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelReply.ProtoReflect.Descriptor instead.
func (*ListChannelReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{14}
}

func (x *ListChannelReply) GetChName() []string {
	if x != nil {
		return x.ChName
	}
	return nil
}

type GetConfigBlockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred   *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	ChName string      `protobuf:"bytes,2,opt,name=ChName,proto3" json:"ChName,omitempty"`
}

func (x *GetConfigBlockReq) Reset() {
	*x = GetConfigBlockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigBlockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigBlockReq) ProtoMessage() {}

func (x *GetConfigBlockReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigBlockReq.ProtoReflect.Descriptor instead.
func (*GetConfigBlockReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{15}
}

func (x *GetConfigBlockReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *GetConfigBlockReq) GetChName() string {
	if x != nil {
		return x.ChName
	}
	return ""
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body []byte `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{16}
}

func (x *Block) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type PropReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred       *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Msg        []byte      `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	WaitEventF bool        `protobuf:"varint,3,opt,name=WaitEventF,proto3" json:"WaitEventF,omitempty"`
	TaskID     string      `protobuf:"bytes,4,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
}

func (x *PropReq) Reset() {
	*x = PropReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropReq) ProtoMessage() {}

func (x *PropReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropReq.ProtoReflect.Descriptor instead.
func (*PropReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{17}
}

func (x *PropReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *PropReq) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PropReq) GetWaitEventF() bool {
	if x != nil {
		return x.WaitEventF
	}
	return false
}

func (x *PropReq) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

type Prop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposal  []byte `protobuf:"bytes,1,opt,name=Proposal,proto3" json:"Proposal,omitempty"`
	TaskID    string `protobuf:"bytes,2,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
	NotReadyF bool   `protobuf:"varint,3,opt,name=NotReadyF,proto3" json:"NotReadyF,omitempty"`
}

func (x *Prop) Reset() {
	*x = Prop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prop) ProtoMessage() {}

func (x *Prop) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prop.ProtoReflect.Descriptor instead.
func (*Prop) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{18}
}

func (x *Prop) GetProposal() []byte {
	if x != nil {
		return x.Proposal
	}
	return nil
}

func (x *Prop) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

func (x *Prop) GetNotReadyF() bool {
	if x != nil {
		return x.NotReadyF
	}
	return false
}

type InstallCC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Cds  []byte      `protobuf:"bytes,2,opt,name=Cds,proto3" json:"Cds,omitempty"`
}

func (x *InstallCC) Reset() {
	*x = InstallCC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallCC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallCC) ProtoMessage() {}

func (x *InstallCC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallCC.ProtoReflect.Descriptor instead.
func (*InstallCC) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{19}
}

func (x *InstallCC) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *InstallCC) GetCds() []byte {
	if x != nil {
		return x.Cds
	}
	return nil
}

type ActivateChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred      *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	ChannelID string      `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
}

func (x *ActivateChannelReq) Reset() {
	*x = ActivateChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateChannelReq) ProtoMessage() {}

func (x *ActivateChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateChannelReq.ProtoReflect.Descriptor instead.
func (*ActivateChannelReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{20}
}

func (x *ActivateChannelReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *ActivateChannelReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

type InstantiateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred      *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	ChannelID string      `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Policy    string      `protobuf:"bytes,3,opt,name=Policy,proto3" json:"Policy,omitempty"`
}

func (x *InstantiateReq) Reset() {
	*x = InstantiateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantiateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantiateReq) ProtoMessage() {}

func (x *InstantiateReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantiateReq.ProtoReflect.Descriptor instead.
func (*InstantiateReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{21}
}

func (x *InstantiateReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *InstantiateReq) GetChannelID() string {
	if x != nil {
		return x.ChannelID
	}
	return ""
}

func (x *InstantiateReq) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

type ListChainCodeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeName []string `protobuf:"bytes,1,rep,name=CodeName,proto3" json:"CodeName,omitempty"`
}

func (x *ListChainCodeReply) Reset() {
	*x = ListChainCodeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChainCodeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChainCodeReply) ProtoMessage() {}

func (x *ListChainCodeReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChainCodeReply.ProtoReflect.Descriptor instead.
func (*ListChainCodeReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{22}
}

func (x *ListChainCodeReply) GetCodeName() []string {
	if x != nil {
		return x.CodeName
	}
	return nil
}

type RecordLedgerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred         *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Key          string      `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	Log          string      `protobuf:"bytes,3,opt,name=Log,proto3" json:"Log,omitempty"`
	StorageGroup string      `protobuf:"bytes,4,opt,name=StorageGroup,proto3" json:"StorageGroup,omitempty"`
}

func (x *RecordLedgerReq) Reset() {
	*x = RecordLedgerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordLedgerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordLedgerReq) ProtoMessage() {}

func (x *RecordLedgerReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordLedgerReq.ProtoReflect.Descriptor instead.
func (*RecordLedgerReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{23}
}

func (x *RecordLedgerReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *RecordLedgerReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RecordLedgerReq) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *RecordLedgerReq) GetStorageGroup() string {
	if x != nil {
		return x.StorageGroup
	}
	return ""
}

type ReadLedgerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred         *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Key          string      `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	StorageGroup string      `protobuf:"bytes,3,opt,name=StorageGroup,proto3" json:"StorageGroup,omitempty"`
	Option       string      `protobuf:"bytes,4,opt,name=Option,proto3" json:"Option,omitempty"`
}

func (x *ReadLedgerReq) Reset() {
	*x = ReadLedgerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadLedgerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadLedgerReq) ProtoMessage() {}

func (x *ReadLedgerReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadLedgerReq.ProtoReflect.Descriptor instead.
func (*ReadLedgerReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{24}
}

func (x *ReadLedgerReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *ReadLedgerReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReadLedgerReq) GetStorageGroup() string {
	if x != nil {
		return x.StorageGroup
	}
	return ""
}

func (x *ReadLedgerReq) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

type ListChainCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred   *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Option string      `protobuf:"bytes,2,opt,name=Option,proto3" json:"Option,omitempty"`
}

func (x *ListChainCodeReq) Reset() {
	*x = ListChainCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChainCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChainCodeReq) ProtoMessage() {}

func (x *ListChainCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChainCodeReq.ProtoReflect.Descriptor instead.
func (*ListChainCodeReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{25}
}

func (x *ListChainCodeReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *ListChainCodeReq) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

type QueryBlockByTxIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred         *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	TxID         string      `protobuf:"bytes,2,opt,name=TxID,proto3" json:"TxID,omitempty"`
	StorageGroup string      `protobuf:"bytes,3,opt,name=StorageGroup,proto3" json:"StorageGroup,omitempty"`
}

func (x *QueryBlockByTxIDReq) Reset() {
	*x = QueryBlockByTxIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlockByTxIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlockByTxIDReq) ProtoMessage() {}

func (x *QueryBlockByTxIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlockByTxIDReq.ProtoReflect.Descriptor instead.
func (*QueryBlockByTxIDReq) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{26}
}

func (x *QueryBlockByTxIDReq) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *QueryBlockByTxIDReq) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *QueryBlockByTxIDReq) GetStorageGroup() string {
	if x != nil {
		return x.StorageGroup
	}
	return ""
}

type RegisterUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred       *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	AuthType   string      `protobuf:"bytes,2,opt,name=AuthType,proto3" json:"AuthType,omitempty"`
	AuthParam  []byte      `protobuf:"bytes,3,opt,name=AuthParam,proto3" json:"AuthParam,omitempty"`
	AppendAttr []byte      `protobuf:"bytes,4,opt,name=AppendAttr,proto3" json:"AppendAttr,omitempty"`
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{27}
}

func (x *RegisterUserRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *RegisterUserRequest) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *RegisterUserRequest) GetAuthParam() []byte {
	if x != nil {
		return x.AuthParam
	}
	return nil
}

func (x *RegisterUserRequest) GetAppendAttr() []byte {
	if x != nil {
		return x.AppendAttr
	}
	return nil
}

type AuthParamLDAP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindServer   string `protobuf:"bytes,1,opt,name=BindServer,proto3" json:"BindServer,omitempty"`
	BindDN       string `protobuf:"bytes,2,opt,name=BindDN,proto3" json:"BindDN,omitempty"`
	QueryServer  string `protobuf:"bytes,3,opt,name=QueryServer,proto3" json:"QueryServer,omitempty"`
	BaseDN       string `protobuf:"bytes,4,opt,name=BaseDN,proto3" json:"BaseDN,omitempty"`
	Query        string `protobuf:"bytes,5,opt,name=Query,proto3" json:"Query,omitempty"`
	UserNameOnCA string `protobuf:"bytes,6,opt,name=UserNameOnCA,proto3" json:"UserNameOnCA,omitempty"`
	Password     string `protobuf:"bytes,7,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *AuthParamLDAP) Reset() {
	*x = AuthParamLDAP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthParamLDAP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthParamLDAP) ProtoMessage() {}

func (x *AuthParamLDAP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthParamLDAP.ProtoReflect.Descriptor instead.
func (*AuthParamLDAP) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{28}
}

func (x *AuthParamLDAP) GetBindServer() string {
	if x != nil {
		return x.BindServer
	}
	return ""
}

func (x *AuthParamLDAP) GetBindDN() string {
	if x != nil {
		return x.BindDN
	}
	return ""
}

func (x *AuthParamLDAP) GetQueryServer() string {
	if x != nil {
		return x.QueryServer
	}
	return ""
}

func (x *AuthParamLDAP) GetBaseDN() string {
	if x != nil {
		return x.BaseDN
	}
	return ""
}

func (x *AuthParamLDAP) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *AuthParamLDAP) GetUserNameOnCA() string {
	if x != nil {
		return x.UserNameOnCA
	}
	return ""
}

func (x *AuthParamLDAP) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthParamJPKI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNameOnCA string `protobuf:"bytes,1,opt,name=UserNameOnCA,proto3" json:"UserNameOnCA,omitempty"`
	ImportItems  string `protobuf:"bytes,2,opt,name=ImportItems,proto3" json:"ImportItems,omitempty"`
}

func (x *AuthParamJPKI) Reset() {
	*x = AuthParamJPKI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthParamJPKI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthParamJPKI) ProtoMessage() {}

func (x *AuthParamJPKI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthParamJPKI.ProtoReflect.Descriptor instead.
func (*AuthParamJPKI) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{29}
}

func (x *AuthParamJPKI) GetUserNameOnCA() string {
	if x != nil {
		return x.UserNameOnCA
	}
	return ""
}

func (x *AuthParamJPKI) GetImportItems() string {
	if x != nil {
		return x.ImportItems
	}
	return ""
}

type EnrollUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnrollReq []byte `protobuf:"bytes,1,opt,name=EnrollReq,proto3" json:"EnrollReq,omitempty"`
	Secret    string `protobuf:"bytes,2,opt,name=Secret,proto3" json:"Secret,omitempty"`
}

func (x *EnrollUserRequest) Reset() {
	*x = EnrollUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollUserRequest) ProtoMessage() {}

func (x *EnrollUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollUserRequest.ProtoReflect.Descriptor instead.
func (*EnrollUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{30}
}

func (x *EnrollUserRequest) GetEnrollReq() []byte {
	if x != nil {
		return x.EnrollReq
	}
	return nil
}

func (x *EnrollUserRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type EnrollUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert []byte `protobuf:"bytes,1,opt,name=Cert,proto3" json:"Cert,omitempty"`
}

func (x *EnrollUserReply) Reset() {
	*x = EnrollUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollUserReply) ProtoMessage() {}

func (x *EnrollUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollUserReply.ProtoReflect.Descriptor instead.
func (*EnrollUserReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{31}
}

func (x *EnrollUserReply) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type CommCARequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Func  string `protobuf:"bytes,1,opt,name=Func,proto3" json:"Func,omitempty"`
	URI   string `protobuf:"bytes,2,opt,name=URI,proto3" json:"URI,omitempty"`
	Token string `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	Param []byte `protobuf:"bytes,4,opt,name=Param,proto3" json:"Param,omitempty"`
}

func (x *CommCARequest) Reset() {
	*x = CommCARequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommCARequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommCARequest) ProtoMessage() {}

func (x *CommCARequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommCARequest.ProtoReflect.Descriptor instead.
func (*CommCARequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{32}
}

func (x *CommCARequest) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *CommCARequest) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *CommCARequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CommCARequest) GetParam() []byte {
	if x != nil {
		return x.Param
	}
	return nil
}

type CommCAReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rsp []byte `protobuf:"bytes,1,opt,name=Rsp,proto3" json:"Rsp,omitempty"`
}

func (x *CommCAReply) Reset() {
	*x = CommCAReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommCAReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommCAReply) ProtoMessage() {}

func (x *CommCAReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommCAReply.ProtoReflect.Descriptor instead.
func (*CommCAReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{33}
}

func (x *CommCAReply) GetRsp() []byte {
	if x != nil {
		return x.Rsp
	}
	return nil
}

type JPKIFuncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Func string `protobuf:"bytes,1,opt,name=Func,proto3" json:"Func,omitempty"`
	Req  []byte `protobuf:"bytes,2,opt,name=Req,proto3" json:"Req,omitempty"`
}

func (x *JPKIFuncRequest) Reset() {
	*x = JPKIFuncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JPKIFuncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JPKIFuncRequest) ProtoMessage() {}

func (x *JPKIFuncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JPKIFuncRequest.ProtoReflect.Descriptor instead.
func (*JPKIFuncRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{34}
}

func (x *JPKIFuncRequest) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *JPKIFuncRequest) GetReq() []byte {
	if x != nil {
		return x.Req
	}
	return nil
}

type JPKIFuncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rsp []byte `protobuf:"bytes,1,opt,name=Rsp,proto3" json:"Rsp,omitempty"`
}

func (x *JPKIFuncReply) Reset() {
	*x = JPKIFuncReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JPKIFuncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JPKIFuncReply) ProtoMessage() {}

func (x *JPKIFuncReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JPKIFuncReply.ProtoReflect.Descriptor instead.
func (*JPKIFuncReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{35}
}

func (x *JPKIFuncReply) GetRsp() []byte {
	if x != nil {
		return x.Rsp
	}
	return nil
}

type BallotFuncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cred *Credential `protobuf:"bytes,1,opt,name=Cred,proto3" json:"Cred,omitempty"`
	Func string      `protobuf:"bytes,2,opt,name=Func,proto3" json:"Func,omitempty"`
	Req  []byte      `protobuf:"bytes,3,opt,name=Req,proto3" json:"Req,omitempty"`
	Time string      `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *BallotFuncRequest) Reset() {
	*x = BallotFuncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallotFuncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallotFuncRequest) ProtoMessage() {}

func (x *BallotFuncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallotFuncRequest.ProtoReflect.Descriptor instead.
func (*BallotFuncRequest) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{36}
}

func (x *BallotFuncRequest) GetCred() *Credential {
	if x != nil {
		return x.Cred
	}
	return nil
}

func (x *BallotFuncRequest) GetFunc() string {
	if x != nil {
		return x.Func
	}
	return ""
}

func (x *BallotFuncRequest) GetReq() []byte {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *BallotFuncRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type BallotFuncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rsp  []byte `protobuf:"bytes,1,opt,name=Rsp,proto3" json:"Rsp,omitempty"`
	Time string `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *BallotFuncReply) Reset() {
	*x = BallotFuncReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_immop_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallotFuncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallotFuncReply) ProtoMessage() {}

func (x *BallotFuncReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_immop_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallotFuncReply.ProtoReflect.Descriptor instead.
func (*BallotFuncReply) Descriptor() ([]byte, []int) {
	return file_proto_immop_proto_rawDescGZIP(), []int{37}
}

func (x *BallotFuncReply) GetRsp() []byte {
	if x != nil {
		return x.Rsp
	}
	return nil
}

func (x *BallotFuncReply) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

var File_proto_immop_proto protoreflect.FileDescriptor

var file_proto_immop_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x65, 0x72, 0x74, 0x22, 0x7b, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x70,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x73, 0x70, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x72, 0x69, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x50,
	0x72, 0x69, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x43, 0x65, 0x72, 0x74, 0x22, 0x3d, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x41, 0x43, 0x65,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x43, 0x41, 0x43, 0x65, 0x72, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x6c, 0x73, 0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x54, 0x6c, 0x73, 0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x22, 0x3b, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x45, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x31, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x07, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04,
	0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d,
	0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43,
	0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x47, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x65,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x04, 0x50, 0x65, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d,
	0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04,
	0x43, 0x72, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x04, 0x50, 0x65, 0x65, 0x72, 0x22,
	0x2a, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x1b, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x7a, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x57, 0x61, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x46, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x46, 0x22, 0x44, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x43, 0x12,
	0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x43, 0x64, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x25,
	0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x22, 0x6d, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x30, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x64, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4c, 0x6f, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x74, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x54, 0x78, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x78, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x74, 0x72,
	0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x44,
	0x41, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x69, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x4e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x42, 0x69, 0x6e, 0x64, 0x44, 0x4e, 0x12, 0x20, 0x0a, 0x0b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x61, 0x73, 0x65, 0x44, 0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x4e, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x41, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x41, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x55, 0x0a, 0x0d, 0x41, 0x75,
	0x74, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4a, 0x50, 0x4b, 0x49, 0x12, 0x22, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x43, 0x41, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x49, 0x0a, 0x11, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x45, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x25, 0x0a, 0x0f,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x43,
	0x65, 0x72, 0x74, 0x22, 0x61, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x43, 0x41, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x49, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x1f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x43, 0x41,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x52, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x0f, 0x4a, 0x50, 0x4b, 0x49, 0x46,
	0x75, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x75,
	0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x52, 0x65, 0x71,
	0x22, 0x21, 0x0a, 0x0d, 0x4a, 0x50, 0x4b, 0x49, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x52, 0x73, 0x70, 0x22, 0x74, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x46, 0x75, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x43, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x04, 0x43, 0x72, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x75, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x0f, 0x42, 0x61, 0x6c,
	0x6c, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x52, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x52, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x32, 0xea, 0x0c, 0x0a, 0x0c, 0x49, 0x6d, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x69, 0x6d,
	0x6d, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6d, 0x6d, 0x6f,
	0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x68, 0x12, 0x1b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0c, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x18, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0b,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x2e, 0x69, 0x6d,
	0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x69, 0x6d,
	0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x12, 0x0e, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x18,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x6e,
	0x64, 0x52, 0x73, 0x70, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x0e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x2e, 0x69, 0x6d, 0x6d, 0x6f,
	0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x43, 0x43, 0x1a, 0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f,
	0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x50, 0x65,
	0x65, 0x72, 0x12, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x4d, 0x79, 0x4f, 0x55, 0x12, 0x11, 0x2e, 0x69, 0x6d, 0x6d, 0x6f,
	0x70, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x0b, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0b, 0x2e, 0x69,
	0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x52,
	0x65, 0x61, 0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x69, 0x6d, 0x6d, 0x6f,
	0x70, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x3d,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x78,
	0x49, 0x44, 0x12, 0x1a, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x78, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x0b,
	0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e,
	0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x69, 0x6d, 0x6d, 0x6f,
	0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x45, 0x6e, 0x72,
	0x6f, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x43,
	0x6f, 0x6d, 0x6d, 0x43, 0x41, 0x12, 0x14, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x43, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x69, 0x6d,
	0x6d, 0x6f, 0x70, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x43, 0x41, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x08, 0x4a, 0x50, 0x4b, 0x49, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x16, 0x2e,
	0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x4a, 0x50, 0x4b, 0x49, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x4a, 0x50,
	0x4b, 0x49, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0a, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x18, 0x2e, 0x69, 0x6d,
	0x6d, 0x6f, 0x70, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x2e, 0x42, 0x61,
	0x6c, 0x6c, 0x6f, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x69, 0x6d, 0x6d, 0x6f, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_immop_proto_rawDescOnce sync.Once
	file_proto_immop_proto_rawDescData = file_proto_immop_proto_rawDesc
)

func file_proto_immop_proto_rawDescGZIP() []byte {
	file_proto_immop_proto_rawDescOnce.Do(func() {
		file_proto_immop_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_immop_proto_rawDescData)
	})
	return file_proto_immop_proto_rawDescData
}

var file_proto_immop_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_proto_immop_proto_goTypes = []interface{}{
	(*Credential)(nil),                 // 0: immop.Credential
	(*CreateServiceRequest)(nil),       // 1: immop.CreateServiceRequest
	(*Reply)(nil),                      // 2: immop.Reply
	(*ExportServiceRequest)(nil),       // 3: immop.ExportServiceRequest
	(*ExportServiceReply)(nil),         // 4: immop.ExportServiceReply
	(*ListServiceRequest)(nil),         // 5: immop.ListServiceRequest
	(*ServiceAttribute)(nil),           // 6: immop.ServiceAttribute
	(*ListServiceReply)(nil),           // 7: immop.ListServiceReply
	(*ImportServiceRequest)(nil),       // 8: immop.ImportServiceRequest
	(*CreateChannelRequest)(nil),       // 9: immop.CreateChannelRequest
	(*ListImportedServiceRequest)(nil), // 10: immop.ListImportedServiceRequest
	(*ServiceSummary)(nil),             // 11: immop.ServiceSummary
	(*ListImportedServiceSummary)(nil), // 12: immop.ListImportedServiceSummary
	(*RemoveServiceRequest)(nil),       // 13: immop.RemoveServiceRequest
	(*ListChannelReply)(nil),           // 14: immop.ListChannelReply
	(*GetConfigBlockReq)(nil),          // 15: immop.GetConfigBlockReq
	(*Block)(nil),                      // 16: immop.Block
	(*PropReq)(nil),                    // 17: immop.PropReq
	(*Prop)(nil),                       // 18: immop.Prop
	(*InstallCC)(nil),                  // 19: immop.InstallCC
	(*ActivateChannelReq)(nil),         // 20: immop.ActivateChannelReq
	(*InstantiateReq)(nil),             // 21: immop.InstantiateReq
	(*ListChainCodeReply)(nil),         // 22: immop.ListChainCodeReply
	(*RecordLedgerReq)(nil),            // 23: immop.RecordLedgerReq
	(*ReadLedgerReq)(nil),              // 24: immop.ReadLedgerReq
	(*ListChainCodeReq)(nil),           // 25: immop.ListChainCodeReq
	(*QueryBlockByTxIDReq)(nil),        // 26: immop.QueryBlockByTxIDReq
	(*RegisterUserRequest)(nil),        // 27: immop.RegisterUserRequest
	(*AuthParamLDAP)(nil),              // 28: immop.AuthParamLDAP
	(*AuthParamJPKI)(nil),              // 29: immop.AuthParamJPKI
	(*EnrollUserRequest)(nil),          // 30: immop.EnrollUserRequest
	(*EnrollUserReply)(nil),            // 31: immop.EnrollUserReply
	(*CommCARequest)(nil),              // 32: immop.CommCARequest
	(*CommCAReply)(nil),                // 33: immop.CommCAReply
	(*JPKIFuncRequest)(nil),            // 34: immop.JPKIFuncRequest
	(*JPKIFuncReply)(nil),              // 35: immop.JPKIFuncReply
	(*BallotFuncRequest)(nil),          // 36: immop.BallotFuncRequest
	(*BallotFuncReply)(nil),            // 37: immop.BallotFuncReply
}
var file_proto_immop_proto_depIdxs = []int32{
	0,  // 0: immop.CreateServiceRequest.Cred:type_name -> immop.Credential
	0,  // 1: immop.ExportServiceRequest.Cred:type_name -> immop.Credential
	0,  // 2: immop.ListServiceRequest.Cred:type_name -> immop.Credential
	6,  // 3: immop.ListServiceReply.Service:type_name -> immop.ServiceAttribute
	0,  // 4: immop.ImportServiceRequest.Cred:type_name -> immop.Credential
	4,  // 5: immop.ImportServiceRequest.Service:type_name -> immop.ExportServiceReply
	0,  // 6: immop.CreateChannelRequest.Cred:type_name -> immop.Credential
	0,  // 7: immop.ListImportedServiceRequest.Cred:type_name -> immop.Credential
	11, // 8: immop.ListImportedServiceSummary.Peer:type_name -> immop.ServiceSummary
	0,  // 9: immop.RemoveServiceRequest.Cred:type_name -> immop.Credential
	11, // 10: immop.RemoveServiceRequest.Peer:type_name -> immop.ServiceSummary
	0,  // 11: immop.GetConfigBlockReq.Cred:type_name -> immop.Credential
	0,  // 12: immop.PropReq.Cred:type_name -> immop.Credential
	0,  // 13: immop.InstallCC.Cred:type_name -> immop.Credential
	0,  // 14: immop.ActivateChannelReq.Cred:type_name -> immop.Credential
	0,  // 15: immop.InstantiateReq.Cred:type_name -> immop.Credential
	0,  // 16: immop.RecordLedgerReq.Cred:type_name -> immop.Credential
	0,  // 17: immop.ReadLedgerReq.Cred:type_name -> immop.Credential
	0,  // 18: immop.ListChainCodeReq.Cred:type_name -> immop.Credential
	0,  // 19: immop.QueryBlockByTxIDReq.Cred:type_name -> immop.Credential
	0,  // 20: immop.RegisterUserRequest.Cred:type_name -> immop.Credential
	0,  // 21: immop.BallotFuncRequest.Cred:type_name -> immop.Credential
	1,  // 22: immop.ImmOperation.CreateService:input_type -> immop.CreateServiceRequest
	3,  // 23: immop.ImmOperation.ExportService:input_type -> immop.ExportServiceRequest
	5,  // 24: immop.ImmOperation.ListService:input_type -> immop.ListServiceRequest
	8,  // 25: immop.ImmOperation.ImportService:input_type -> immop.ImportServiceRequest
	10, // 26: immop.ImmOperation.ListImportedService:input_type -> immop.ListImportedServiceRequest
	9,  // 27: immop.ImmOperation.CreateChannel:input_type -> immop.CreateChannelRequest
	13, // 28: immop.ImmOperation.RemoveServiceFromCh:input_type -> immop.RemoveServiceRequest
	15, // 29: immop.ImmOperation.GetConfigBlock:input_type -> immop.GetConfigBlockReq
	17, // 30: immop.ImmOperation.JoinChannel:input_type -> immop.PropReq
	17, // 31: immop.ImmOperation.SendSignedProp:input_type -> immop.PropReq
	17, // 32: immop.ImmOperation.SendSignedPropAndRspDone:input_type -> immop.PropReq
	17, // 33: immop.ImmOperation.SendSignedPropAndRsp:input_type -> immop.PropReq
	17, // 34: immop.ImmOperation.SendSignedPropOrderer:input_type -> immop.PropReq
	20, // 35: immop.ImmOperation.ActivateChannel:input_type -> immop.ActivateChannelReq
	19, // 36: immop.ImmOperation.InstallChainCode:input_type -> immop.InstallCC
	21, // 37: immop.ImmOperation.Instantiate:input_type -> immop.InstantiateReq
	0,  // 38: immop.ImmOperation.ListChannelInPeer:input_type -> immop.Credential
	0,  // 39: immop.ImmOperation.ListChannelInMyOU:input_type -> immop.Credential
	25, // 40: immop.ImmOperation.ListChainCode:input_type -> immop.ListChainCodeReq
	23, // 41: immop.ImmOperation.RecordLedger:input_type -> immop.RecordLedgerReq
	24, // 42: immop.ImmOperation.ReadLedger:input_type -> immop.ReadLedgerReq
	26, // 43: immop.ImmOperation.QueryBlockByTxID:input_type -> immop.QueryBlockByTxIDReq
	27, // 44: immop.ImmOperation.RegisterUser:input_type -> immop.RegisterUserRequest
	30, // 45: immop.ImmOperation.EnrollUser:input_type -> immop.EnrollUserRequest
	32, // 46: immop.ImmOperation.CommCA:input_type -> immop.CommCARequest
	34, // 47: immop.ImmOperation.JPKIFunc:input_type -> immop.JPKIFuncRequest
	36, // 48: immop.ImmOperation.BallotFunc:input_type -> immop.BallotFuncRequest
	2,  // 49: immop.ImmOperation.CreateService:output_type -> immop.Reply
	4,  // 50: immop.ImmOperation.ExportService:output_type -> immop.ExportServiceReply
	7,  // 51: immop.ImmOperation.ListService:output_type -> immop.ListServiceReply
	2,  // 52: immop.ImmOperation.ImportService:output_type -> immop.Reply
	12, // 53: immop.ImmOperation.ListImportedService:output_type -> immop.ListImportedServiceSummary
	2,  // 54: immop.ImmOperation.CreateChannel:output_type -> immop.Reply
	2,  // 55: immop.ImmOperation.RemoveServiceFromCh:output_type -> immop.Reply
	16, // 56: immop.ImmOperation.GetConfigBlock:output_type -> immop.Block
	18, // 57: immop.ImmOperation.JoinChannel:output_type -> immop.Prop
	2,  // 58: immop.ImmOperation.SendSignedProp:output_type -> immop.Reply
	18, // 59: immop.ImmOperation.SendSignedPropAndRspDone:output_type -> immop.Prop
	18, // 60: immop.ImmOperation.SendSignedPropAndRsp:output_type -> immop.Prop
	18, // 61: immop.ImmOperation.SendSignedPropOrderer:output_type -> immop.Prop
	18, // 62: immop.ImmOperation.ActivateChannel:output_type -> immop.Prop
	18, // 63: immop.ImmOperation.InstallChainCode:output_type -> immop.Prop
	18, // 64: immop.ImmOperation.Instantiate:output_type -> immop.Prop
	18, // 65: immop.ImmOperation.ListChannelInPeer:output_type -> immop.Prop
	18, // 66: immop.ImmOperation.ListChannelInMyOU:output_type -> immop.Prop
	18, // 67: immop.ImmOperation.ListChainCode:output_type -> immop.Prop
	18, // 68: immop.ImmOperation.RecordLedger:output_type -> immop.Prop
	18, // 69: immop.ImmOperation.ReadLedger:output_type -> immop.Prop
	18, // 70: immop.ImmOperation.QueryBlockByTxID:output_type -> immop.Prop
	2,  // 71: immop.ImmOperation.RegisterUser:output_type -> immop.Reply
	31, // 72: immop.ImmOperation.EnrollUser:output_type -> immop.EnrollUserReply
	33, // 73: immop.ImmOperation.CommCA:output_type -> immop.CommCAReply
	35, // 74: immop.ImmOperation.JPKIFunc:output_type -> immop.JPKIFuncReply
	37, // 75: immop.ImmOperation.BallotFunc:output_type -> immop.BallotFuncReply
	49, // [49:76] is the sub-list for method output_type
	22, // [22:49] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_immop_proto_init() }
func file_proto_immop_proto_init() {
	if File_proto_immop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_immop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListServiceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImportedServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImportedServiceSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChannelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigBlockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallCC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantiateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChainCodeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordLedgerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadLedgerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChainCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlockByTxIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthParamLDAP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthParamJPKI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommCARequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommCAReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JPKIFuncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JPKIFuncReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BallotFuncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_immop_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BallotFuncReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_immop_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_immop_proto_goTypes,
		DependencyIndexes: file_proto_immop_proto_depIdxs,
		MessageInfos:      file_proto_immop_proto_msgTypes,
	}.Build()
	File_proto_immop_proto = out.File
	file_proto_immop_proto_rawDesc = nil
	file_proto_immop_proto_goTypes = nil
	file_proto_immop_proto_depIdxs = nil
}
