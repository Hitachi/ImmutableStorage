# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import st2auth_immst_backend.immop_pb2 as immop__pb2


class ImmOperationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateService = channel.unary_unary(
                '/immop.ImmOperation/CreateService',
                request_serializer=immop__pb2.CreateServiceRequest.SerializeToString,
                response_deserializer=immop__pb2.Reply.FromString,
                )
        self.ExportService = channel.unary_unary(
                '/immop.ImmOperation/ExportService',
                request_serializer=immop__pb2.ExportServiceRequest.SerializeToString,
                response_deserializer=immop__pb2.ExportServiceReply.FromString,
                )
        self.ListService = channel.unary_unary(
                '/immop.ImmOperation/ListService',
                request_serializer=immop__pb2.ListServiceRequest.SerializeToString,
                response_deserializer=immop__pb2.ListServiceReply.FromString,
                )
        self.ImportService = channel.unary_unary(
                '/immop.ImmOperation/ImportService',
                request_serializer=immop__pb2.ImportServiceRequest.SerializeToString,
                response_deserializer=immop__pb2.Reply.FromString,
                )
        self.ListImportedService = channel.unary_unary(
                '/immop.ImmOperation/ListImportedService',
                request_serializer=immop__pb2.ListImportedServiceRequest.SerializeToString,
                response_deserializer=immop__pb2.ListImportedServiceSummary.FromString,
                )
        self.CreateChannel = channel.unary_unary(
                '/immop.ImmOperation/CreateChannel',
                request_serializer=immop__pb2.CreateChannelRequest.SerializeToString,
                response_deserializer=immop__pb2.Reply.FromString,
                )
        self.RemoveServiceFromCh = channel.unary_unary(
                '/immop.ImmOperation/RemoveServiceFromCh',
                request_serializer=immop__pb2.RemoveServiceRequest.SerializeToString,
                response_deserializer=immop__pb2.Reply.FromString,
                )
        self.GetConfigBlock = channel.unary_unary(
                '/immop.ImmOperation/GetConfigBlock',
                request_serializer=immop__pb2.GetConfigBlockReq.SerializeToString,
                response_deserializer=immop__pb2.Block.FromString,
                )
        self.JoinChannel = channel.unary_unary(
                '/immop.ImmOperation/JoinChannel',
                request_serializer=immop__pb2.PropReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.SendSignedProp = channel.unary_unary(
                '/immop.ImmOperation/SendSignedProp',
                request_serializer=immop__pb2.PropReq.SerializeToString,
                response_deserializer=immop__pb2.Reply.FromString,
                )
        self.SendSignedPropAndRspDone = channel.unary_unary(
                '/immop.ImmOperation/SendSignedPropAndRspDone',
                request_serializer=immop__pb2.PropReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.SendSignedPropAndRsp = channel.unary_unary(
                '/immop.ImmOperation/SendSignedPropAndRsp',
                request_serializer=immop__pb2.PropReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.SendSignedPropOrderer = channel.unary_unary(
                '/immop.ImmOperation/SendSignedPropOrderer',
                request_serializer=immop__pb2.PropReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.ActivateChannel = channel.unary_unary(
                '/immop.ImmOperation/ActivateChannel',
                request_serializer=immop__pb2.ActivateChannelReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.InstallChainCode = channel.unary_unary(
                '/immop.ImmOperation/InstallChainCode',
                request_serializer=immop__pb2.InstallCC.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.Instantiate = channel.unary_unary(
                '/immop.ImmOperation/Instantiate',
                request_serializer=immop__pb2.InstantiateReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.ListChannelInPeer = channel.unary_unary(
                '/immop.ImmOperation/ListChannelInPeer',
                request_serializer=immop__pb2.Credential.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.ListChannelInMyOU = channel.unary_unary(
                '/immop.ImmOperation/ListChannelInMyOU',
                request_serializer=immop__pb2.Credential.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.ListChainCode = channel.unary_unary(
                '/immop.ImmOperation/ListChainCode',
                request_serializer=immop__pb2.ListChainCodeReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.RecordLedger = channel.unary_unary(
                '/immop.ImmOperation/RecordLedger',
                request_serializer=immop__pb2.RecordLedgerReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.ReadLedger = channel.unary_unary(
                '/immop.ImmOperation/ReadLedger',
                request_serializer=immop__pb2.ReadLedgerReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.QueryBlockByTxID = channel.unary_unary(
                '/immop.ImmOperation/QueryBlockByTxID',
                request_serializer=immop__pb2.QueryBlockByTxIDReq.SerializeToString,
                response_deserializer=immop__pb2.Prop.FromString,
                )
        self.RegisterUser = channel.unary_unary(
                '/immop.ImmOperation/RegisterUser',
                request_serializer=immop__pb2.RegisterUserRequest.SerializeToString,
                response_deserializer=immop__pb2.Reply.FromString,
                )
        self.EnrollUser = channel.unary_unary(
                '/immop.ImmOperation/EnrollUser',
                request_serializer=immop__pb2.EnrollUserRequest.SerializeToString,
                response_deserializer=immop__pb2.EnrollUserReply.FromString,
                )
        self.CommCA = channel.unary_unary(
                '/immop.ImmOperation/CommCA',
                request_serializer=immop__pb2.CommCARequest.SerializeToString,
                response_deserializer=immop__pb2.CommCAReply.FromString,
                )
        self.JPKIFunc = channel.unary_unary(
                '/immop.ImmOperation/JPKIFunc',
                request_serializer=immop__pb2.JPKIFuncRequest.SerializeToString,
                response_deserializer=immop__pb2.JPKIFuncReply.FromString,
                )
        self.BallotFunc = channel.unary_unary(
                '/immop.ImmOperation/BallotFunc',
                request_serializer=immop__pb2.BallotFuncRequest.SerializeToString,
                response_deserializer=immop__pb2.BallotFuncReply.FromString,
                )
        self.ImmstFunc = channel.unary_unary(
                '/immop.ImmOperation/ImmstFunc',
                request_serializer=immop__pb2.ImmstFuncRequest.SerializeToString,
                response_deserializer=immop__pb2.ImmstFuncReply.FromString,
                )


class ImmOperationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListImportedService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveServiceFromCh(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfigBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendSignedProp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendSignedPropAndRspDone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendSignedPropAndRsp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendSignedPropOrderer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallChainCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Instantiate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChannelInPeer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChannelInMyOU(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChainCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordLedger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadLedger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryBlockByTxID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnrollUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommCA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JPKIFunc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BallotFunc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImmstFunc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImmOperationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateService': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateService,
                    request_deserializer=immop__pb2.CreateServiceRequest.FromString,
                    response_serializer=immop__pb2.Reply.SerializeToString,
            ),
            'ExportService': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportService,
                    request_deserializer=immop__pb2.ExportServiceRequest.FromString,
                    response_serializer=immop__pb2.ExportServiceReply.SerializeToString,
            ),
            'ListService': grpc.unary_unary_rpc_method_handler(
                    servicer.ListService,
                    request_deserializer=immop__pb2.ListServiceRequest.FromString,
                    response_serializer=immop__pb2.ListServiceReply.SerializeToString,
            ),
            'ImportService': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportService,
                    request_deserializer=immop__pb2.ImportServiceRequest.FromString,
                    response_serializer=immop__pb2.Reply.SerializeToString,
            ),
            'ListImportedService': grpc.unary_unary_rpc_method_handler(
                    servicer.ListImportedService,
                    request_deserializer=immop__pb2.ListImportedServiceRequest.FromString,
                    response_serializer=immop__pb2.ListImportedServiceSummary.SerializeToString,
            ),
            'CreateChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChannel,
                    request_deserializer=immop__pb2.CreateChannelRequest.FromString,
                    response_serializer=immop__pb2.Reply.SerializeToString,
            ),
            'RemoveServiceFromCh': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveServiceFromCh,
                    request_deserializer=immop__pb2.RemoveServiceRequest.FromString,
                    response_serializer=immop__pb2.Reply.SerializeToString,
            ),
            'GetConfigBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigBlock,
                    request_deserializer=immop__pb2.GetConfigBlockReq.FromString,
                    response_serializer=immop__pb2.Block.SerializeToString,
            ),
            'JoinChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinChannel,
                    request_deserializer=immop__pb2.PropReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'SendSignedProp': grpc.unary_unary_rpc_method_handler(
                    servicer.SendSignedProp,
                    request_deserializer=immop__pb2.PropReq.FromString,
                    response_serializer=immop__pb2.Reply.SerializeToString,
            ),
            'SendSignedPropAndRspDone': grpc.unary_unary_rpc_method_handler(
                    servicer.SendSignedPropAndRspDone,
                    request_deserializer=immop__pb2.PropReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'SendSignedPropAndRsp': grpc.unary_unary_rpc_method_handler(
                    servicer.SendSignedPropAndRsp,
                    request_deserializer=immop__pb2.PropReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'SendSignedPropOrderer': grpc.unary_unary_rpc_method_handler(
                    servicer.SendSignedPropOrderer,
                    request_deserializer=immop__pb2.PropReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'ActivateChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateChannel,
                    request_deserializer=immop__pb2.ActivateChannelReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'InstallChainCode': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallChainCode,
                    request_deserializer=immop__pb2.InstallCC.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'Instantiate': grpc.unary_unary_rpc_method_handler(
                    servicer.Instantiate,
                    request_deserializer=immop__pb2.InstantiateReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'ListChannelInPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChannelInPeer,
                    request_deserializer=immop__pb2.Credential.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'ListChannelInMyOU': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChannelInMyOU,
                    request_deserializer=immop__pb2.Credential.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'ListChainCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChainCode,
                    request_deserializer=immop__pb2.ListChainCodeReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'RecordLedger': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordLedger,
                    request_deserializer=immop__pb2.RecordLedgerReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'ReadLedger': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadLedger,
                    request_deserializer=immop__pb2.ReadLedgerReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'QueryBlockByTxID': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryBlockByTxID,
                    request_deserializer=immop__pb2.QueryBlockByTxIDReq.FromString,
                    response_serializer=immop__pb2.Prop.SerializeToString,
            ),
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=immop__pb2.RegisterUserRequest.FromString,
                    response_serializer=immop__pb2.Reply.SerializeToString,
            ),
            'EnrollUser': grpc.unary_unary_rpc_method_handler(
                    servicer.EnrollUser,
                    request_deserializer=immop__pb2.EnrollUserRequest.FromString,
                    response_serializer=immop__pb2.EnrollUserReply.SerializeToString,
            ),
            'CommCA': grpc.unary_unary_rpc_method_handler(
                    servicer.CommCA,
                    request_deserializer=immop__pb2.CommCARequest.FromString,
                    response_serializer=immop__pb2.CommCAReply.SerializeToString,
            ),
            'JPKIFunc': grpc.unary_unary_rpc_method_handler(
                    servicer.JPKIFunc,
                    request_deserializer=immop__pb2.JPKIFuncRequest.FromString,
                    response_serializer=immop__pb2.JPKIFuncReply.SerializeToString,
            ),
            'BallotFunc': grpc.unary_unary_rpc_method_handler(
                    servicer.BallotFunc,
                    request_deserializer=immop__pb2.BallotFuncRequest.FromString,
                    response_serializer=immop__pb2.BallotFuncReply.SerializeToString,
            ),
            'ImmstFunc': grpc.unary_unary_rpc_method_handler(
                    servicer.ImmstFunc,
                    request_deserializer=immop__pb2.ImmstFuncRequest.FromString,
                    response_serializer=immop__pb2.ImmstFuncReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'immop.ImmOperation', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ImmOperation(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/CreateService',
            immop__pb2.CreateServiceRequest.SerializeToString,
            immop__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExportService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ExportService',
            immop__pb2.ExportServiceRequest.SerializeToString,
            immop__pb2.ExportServiceReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ListService',
            immop__pb2.ListServiceRequest.SerializeToString,
            immop__pb2.ListServiceReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ImportService',
            immop__pb2.ImportServiceRequest.SerializeToString,
            immop__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListImportedService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ListImportedService',
            immop__pb2.ListImportedServiceRequest.SerializeToString,
            immop__pb2.ListImportedServiceSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/CreateChannel',
            immop__pb2.CreateChannelRequest.SerializeToString,
            immop__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveServiceFromCh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/RemoveServiceFromCh',
            immop__pb2.RemoveServiceRequest.SerializeToString,
            immop__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfigBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/GetConfigBlock',
            immop__pb2.GetConfigBlockReq.SerializeToString,
            immop__pb2.Block.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/JoinChannel',
            immop__pb2.PropReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendSignedProp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/SendSignedProp',
            immop__pb2.PropReq.SerializeToString,
            immop__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendSignedPropAndRspDone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/SendSignedPropAndRspDone',
            immop__pb2.PropReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendSignedPropAndRsp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/SendSignedPropAndRsp',
            immop__pb2.PropReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendSignedPropOrderer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/SendSignedPropOrderer',
            immop__pb2.PropReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ActivateChannel',
            immop__pb2.ActivateChannelReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstallChainCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/InstallChainCode',
            immop__pb2.InstallCC.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Instantiate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/Instantiate',
            immop__pb2.InstantiateReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListChannelInPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ListChannelInPeer',
            immop__pb2.Credential.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListChannelInMyOU(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ListChannelInMyOU',
            immop__pb2.Credential.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListChainCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ListChainCode',
            immop__pb2.ListChainCodeReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordLedger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/RecordLedger',
            immop__pb2.RecordLedgerReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadLedger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ReadLedger',
            immop__pb2.ReadLedgerReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryBlockByTxID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/QueryBlockByTxID',
            immop__pb2.QueryBlockByTxIDReq.SerializeToString,
            immop__pb2.Prop.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/RegisterUser',
            immop__pb2.RegisterUserRequest.SerializeToString,
            immop__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnrollUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/EnrollUser',
            immop__pb2.EnrollUserRequest.SerializeToString,
            immop__pb2.EnrollUserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommCA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/CommCA',
            immop__pb2.CommCARequest.SerializeToString,
            immop__pb2.CommCAReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JPKIFunc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/JPKIFunc',
            immop__pb2.JPKIFuncRequest.SerializeToString,
            immop__pb2.JPKIFuncReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BallotFunc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/BallotFunc',
            immop__pb2.BallotFuncRequest.SerializeToString,
            immop__pb2.BallotFuncReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImmstFunc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/immop.ImmOperation/ImmstFunc',
            immop__pb2.ImmstFuncRequest.SerializeToString,
            immop__pb2.ImmstFuncReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
